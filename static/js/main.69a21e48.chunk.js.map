{"version":3,"sources":["PagesApp/WrappedPages/ErrorPage/Error404.module.css","Redux/ProfileReducer/ProfileReducer.ts","Components/c1-SuperInputText/SuperInputText.tsx","Components/c3-SuperCheckbox/SuperCheckbox.tsx","Components/c2-SuperButton/SuperButton.tsx","API/Api.ts","Redux/AppReducer/AppReducer.ts","Redux/AuthReducer/AuthReducer.ts","Redux/RegistrationReducer/RegistartionReducer.ts","Common/preloader/Spinner.tsx","Utils/Validation/ValidationPassword.tsx","PagesApp/WrappedPages/AuthPage/AuthContainer.tsx","Redux/ResPassReducer/ResPasswordReducer.ts","PagesApp/WrappedPages/RegistartionPage/RegistrationContainer.tsx","Components/Modal/Modal.tsx","PagesApp/WrappedPages/ProfilePage/ProfileChangeName/ProfileChangeName.tsx","PagesApp/WrappedPages/ProfilePage/ProfileContainer.tsx","PagesApp/WrappedPages/ResPasswordPage/ResPasswordComponent.tsx","Redux/NewPassReducer/NewPassReducer.ts","PagesApp/WrappedPages/ResPasswordPage/ResPasswordContainer.tsx","Redux/PacksPageReducer/PacksPageReducer.ts","PagesApp/WrappedPages/NewPasswordPage/NewPasswordContainer.tsx","PagesApp/WrappedPages/ErrorPage/Error404.tsx","PagesApp/WrappedPages/ErrorPage/ErrorContainer.tsx","Utils/Helpers/HelperErrorCatch.tsx","Redux/CardsReducer/CardsReducer.ts","PagesApp/WrappedPages/PacksPage/ChangeNameInput.tsx","Components/TableWrapper/TableIttem/TableItem.tsx","Components/Modal/DeleteModal/DeleteModal.tsx","PagesApp/WrappedPages/PacksPage/PacksComponent.tsx","PagesApp/WrappedPages/PacksPage/AddNewPack/AddNewPack.tsx","Components/TableWrapper/TableWrapper.tsx","Common/Paginator/PaginatorComponent.tsx","Components/c5-SuperSelect/SuperSelect.tsx","PagesApp/WrappedPages/PacksPage/AddNewPack/Slider/Slider.tsx","Utils/Helpers/HelpersGet.ts","PagesApp/WrappedPages/PacksPage/PacksContainer.tsx","PagesApp/WrappedPages/CardsPage/CardsComponent.tsx","Routes/Routes.tsx","PagesApp/WrappedPages/CardsPage/CardsPageConteiner.tsx","PagesApp/WrappedPages/LearnPage/LearnPage.tsx","Redux/ErrorReducer/ErrorReducer.ts","PagesApp/StaticPages/Navigation/NavigationContainer.tsx","App.tsx","reportWebVitals.ts","Redux/Store.ts","index.tsx","Components/TableWrapper/TableWrapper.module.scss","PagesApp/WrappedPages/ProfilePage/ProfileContainer.module.scss","PagesApp/WrappedPages/AuthPage/AuthContainer.module.css","PagesApp/StaticPages/Navigation/NavigationContainer.module.scss","Components/TableWrapper/TableIttem/TableItem.module.scss","PagesApp/WrappedPages/PacksPage/PacksContainer.module.scss","Components/c1-SuperInputText/SuperInputText.module.css","Components/Modal/Modal.module.scss","Components/c2-SuperButton/SuperButton.module.css","PagesApp/WrappedPages/RegistartionPage/Registration.module.scss","PagesApp/WrappedPages/ResPasswordPage/ResPassword.module.css","Components/Modal/DeleteModal/DeleteModal.module.scss","Common/Paginator/Paginator.module.css","Components/c3-SuperCheckbox/SuperCheckbox.module.css","PagesApp/WrappedPages/NewPasswordPage/NewPasswordContainer.module.scss","PagesApp/WrappedPages/PacksPage/Packs.module.scss","Common/preloader/Spinner.module.scss"],"names":["module","exports","ActionType","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","errorMes","onBlur","setError","value","restProps","useState","ErrorBlur","setErrorBlur","finalSpanClassName","s","finalInputClassName","superInput","errorInput","e","currentTarget","key","SuperCheckbox","onChangeChecked","children","checked","checkbox","SuperButton","red","finalClassName","button_default","button_red","axiosInstance","axios","create","baseURL","withCredentials","ApiAuth","email","password","rememberMe","post","delete","message","name","put","token","resetPasswordToken","ApiRegistration","ApiPack","pageCount","page","user_id","min","max","packName","sortPacks","get","params","body","cardsPack","id","ApiCards","cardsPack_id","question","card","_id","card_id","grade","initialState","profile","undefined","setProfileAc","SET_PROFILE","payload","ProfileReducer","state","action","CLEAN_PROFILE","isInitial","isLogin","status","setLoginAC","SET_LOGIN","setStatusAC","setErrorMes","SET_ERROR_MES","setAuthMe","dispatch","then","res","data","catch","response","console","log","finally","SET_INITIAL_APP","AuthReducer","SET_STATUS","Spinner","arrStyle","i","push","loader","map","item","inx","style","validateInputNewPas","setPassword","setErrorMesPas","setErrorPas","rePassword","trim","test","AuthContainer","reEmail","setEmail","errorLog","setErrorLog","errorMesLog","setErrorMesLog","errorMesPas","errorPas","check","setCheck","useSelector","auth","errordata","useDispatch","to","container","auth_main","auth_wrapper","input_block","placeholder","auth_link","RoutingType","registration","resPass","btn_check","onClick","setLoginT","disabled","errorMesOp","isRegistration","setRegistration","SET_IS_REGISTRATION","setStatus","putData","SET_ERROR","RegistrationReducer","SET_DATA","RegistrationContainer","confirmPassword","setConfirmPassword","isValidEmail","setIsValidEmail","isValidPassword","setIsValidPassword","isValidConfirmPassword","setIsValidConfirmPassword","errorEmail","setErrorEmail","errorPassword","setErrorPassword","errorConfirmPassword","setErrorConfirmPassword","Paper","reg_wrapper","length","btn","Modal","modal","setModal","finalModalClassName","active","finalModalContentClassName","modal_content","stopPropagation","ProfileChangeName","setName","change_name","updatedUser","setChangeName","ProfileContainer","useEffect","profile_main_wrapper","profile_item_wrapper","profile_item","item_title","ResPassword","title","checkWith","ResPasswordReducer","SET_CHECK_WITH","ResPasswordContainer","resPas","formik","useFormik","initialValues","onSubmit","values","a","resetForm","validate","errors","res_Password_wrapper","ResPasswordComponent","handleSubmit","input_style","getFieldProps","touched","SortArrowValues","changeMes","loading","setNewMes","NEW_CHANGE_MES","loadingNewPas","LOADING","ChangePassword","ERROR_MES","NewPasswordReducer","NewPasswordContainer","errorMesConfirmPas","setErrorMesConfirmPas","newPas","isChange","useHistory","location","pathname","replace","wrapper_main","wrapper_items","Error404","wrapped","sadMac","srText","r","o","_4","_0","n","t","f","u","d","ErrorContainer","HelperErrorCatch","cardPacks","isDisabled","pageSize","currentPage","isPrivat","cardPacksTotalCount","cardsCount","minCardsCount","maxCardsCount","checkedCount","sortArrow","IS_DISABLED","setCheckedCount","count","SET_COUNT_RENGE","setSortArrow","sortValue","SET_SORT_ARROW","getPacksThunk","getState","packsPage","minCheckedCount","maxCheckedCount","SET_PACKS_TOTAL_COUNT","GET_PACKS","SET_CARDS_COUNT","PacksPageReducer","SET_PAGE_SIZE","SET_CURRENT_PAGE","IS_PRIVAT","SET_PACK_NAME","ChangeName","namePack","onChangeName","TableItem","props","card_wrapped","card_item","name1","name2","name3","card_item_btn","DeleteModal","onDeleteCard","delete_modal_wrapper","delete_modal_title","btn_group_delete","PacksComponent","onDeletePack","userId","updated","onChangeNamePackThunk","arrow_1","AddNewPack","addNewName","names","setNames","TableWrapper","onClickHandler","title1","title2","title3","onClickUpHandlerSort","onClickDownHandlerSort","activeClassUp","setActiveClassUp","activeClassDown","setActiveClassDown","main_wrapped","table_wrapped","title_wrapped","title_item","Arrow","Arrow_active","Arrow_load","SORT_UP","SORT_DOWN","Paginator","totalCount","onPageChangeHandler","x","portionSize","pagesCount","Math","ceil","pages","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","styles","paginator","filter","p","selectedPage","pageNumber","SuperSelect","options","onChangeOption","mappedOptions","el","useStyles","makeStyles","root","width","RangeSlider","classes","Typography","gutterBottom","Slider","event","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","HelpersGet","PacksContainer","main_wrapp","setting_wrapp","seTisPrivat","setPackName","addPacksThunk","setCurrentPageAC","option","setPageSizeAC","CardsComponent","cards","onChangeNameQuestion","rating","pageCurrent","getCardsThunk","cardTotalCount","cardsTotalCount","SET_CARDS_TOTAL_COUNT","GET_CARDS","onChangeGrade","shots","SET_UPDATE_GRADE","setUpdateGrade","updatedGrade","CardsReducer","newArrr","CardsPageContainer","cardsPage","cardId","useParams","onChangedCardsThunk","addCardsThunk","find","grades","getCard","sum","reduce","acc","rand","random","newSum","LearnPage","setCard","isChecked","setIsChecked","first","setFirst","toFixed","answer","g","Routes","path","exact","render","newPass","packs","learn","from","NavigationContainer","wrapper","activeClassName","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorReducer","reducer","combineReducers","NewPassReducer","middleware","applyMiddleware","thunkMiddleware","store","createStore","composeWithDevTools","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69a21e48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapped\":\"Error404_wrapped__3KOXQ\",\"sadMac\":\"Error404_sadMac__309lV\",\"srText\":\"Error404_srText__Gm9Xb\",\"_0\":\"Error404__0__3R_lo\",\"_4\":\"Error404__4__fXCz1\",\"d\":\"Error404_d__2dJww\",\"e\":\"Error404_e__Oe9aV\",\"f\":\"Error404_f__ji6ea\",\"n\":\"Error404_n__3zPdG\",\"o\":\"Error404_o__1tujb\",\"r\":\"Error404_r__2WVRL\",\"t\":\"Error404_t__gqMjb\",\"u\":\"Error404_u__14I-2\"};","import {ResponseTypeProfile} from '../../API/Api'\r\n\r\n\r\nexport interface stateProps {\r\n    profile?: ResponseTypeProfile\r\n\r\n}\r\n\r\n\r\nconst initialState = {\r\n    profile: undefined\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_PROFILE = 'PROFILE/SET_PROFILE',\r\n    CLEAN_PROFILE = 'PROFILE/CLEAN_PROFILE'\r\n}\r\n\r\n\r\n//actions\r\n\r\n// interface Action<T> {\r\n//     type: ActionType,\r\n//     payload: T\r\n//\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ProfileReducer = (state: stateProps  = initialState, action: ActionProfileType): stateProps  => {\r\n    switch (action.type) {\r\n\r\n        case ActionType.SET_PROFILE:\r\n            return {...state, profile: {...action.payload}}\r\n        case ActionType.CLEAN_PROFILE:\r\n            return {...state, profile: undefined}\r\n        default: return  state\r\n    }\r\n\r\n}\r\n\r\nexport const setProfileAc = (profile: ResponseTypeProfile ) => {\r\n    return {type: ActionType.SET_PROFILE, payload: profile} as const\r\n}\r\nexport const cleanProfile = () => {\r\n    return {type:ActionType.CLEAN_PROFILE} as const\r\n}\r\n\r\nexport type ActionProfileType = ReturnType<typeof setProfileAc> | ReturnType<typeof cleanProfile>\r\n\r\n\r\nexport default ProfileReducer","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, ReactNode, useState} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: boolean\r\n    spanClassName?: string\r\n    errorMes?: string\r\n    setError?:(value:boolean) => void\r\n    className?:string\r\n    children?: ReactNode\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        errorMes,\r\n        onBlur,\r\n        setError,\r\n        value,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n    const [ErrorBlur, setErrorBlur] = useState<boolean>(false)\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${s.superInput} ${ErrorBlur && error ? s.errorInput : className ? s[className] : ''}`; // need to fix with (?:) and s.superInput\r\n\r\n    const onBlurHandler = (e:React.FocusEvent<HTMLInputElement>) => {\r\n        if (error) {\r\n            onBlur && onBlur(e)\r\n            setErrorBlur(true)\r\n        } else if (!value){\r\n            onBlur && onBlur(e)\r\n            setErrorBlur(true)\r\n            setError && setError(true)\r\n        } else {\r\n            setErrorBlur(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <input\r\n                type={type ? type : 'text'}\r\n                onChange={onChangeCallback}\r\n                value={value}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                onBlur={ onBlurHandler}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {ErrorBlur && error ? <span className={finalSpanClassName}>{errorMes}</span> :\r\n                <span className={finalSpanClassName}> </span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, ReactNode} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n    checked?: boolean\r\n    children: ReactNode\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        checked,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange\r\n        && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                checked={checked}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n    className?: string\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.button_default} ${red ? s.button_red : \"\"} ${className ? s[className] : ''}`;\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import axios from \"axios\";\r\nimport {SortArrowValues} from \"../Redux/PacksPageReducer/PacksPageReducer\";\r\n\r\n\r\n//first deploy at 10.02.21\r\nconst configOMB = {\r\n    // localBack\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    // heroku\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n\r\n};\r\n\r\nconst axiosInstance = axios.create(configOMB);\r\nexport type ResponseTypeProfile = {\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    token: string\r\n}\r\n\r\nexport type ResponseTypeLogOut = {\r\n    info: string\r\n    error: string;\r\n}\r\n\r\nexport type ResponseTypeRegistration = {\r\n    email: string,\r\n    password: string,\r\n    error?: string | undefined\r\n}\r\n\r\n\r\nexport interface ResponseTypeCardsPacksData  {\r\n    _id: string,\r\n    user_id: string,\r\n    name: string,\r\n    path: '/def',\r\n    cardsCount: number,\r\n    grade: number,\r\n    shots: number,\r\n    rating: number,\r\n    type: 'pack' | 'folder',\r\n    created: Date;\r\n    updated: Date;\r\n\r\n}\r\n\r\nexport interface ResponseTypeCardsPacks {\r\n    cardPacks: Array<ResponseTypeCardsPacksData>,\r\n    page: number\r\n    pageCount: number\r\n    cardPacksTotalCount: number\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n    token: string\r\n    tokenDeathTime: number\r\n}\r\n\r\n\r\nexport const ApiAuth = {\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return axiosInstance.post<ResponseTypeProfile>('/auth/login', {email, password, rememberMe})\r\n    },\r\n    logOut() {\r\n        return axiosInstance.delete<ResponseTypeLogOut>('/auth/me')\r\n    },\r\n    recovery(email: string) {\r\n        return axiosInstance.post('/auth/forgot', {\r\n            email, message: `<div style=\"background-color: lime; padding: 15px\">\t\r\n\tpassword recovery link: \r\n\t<a href='https://dimazharikov.github.io/Part16_dev/#/set-new-password/$token$'>\r\n\tlink</a></div>`\r\n        })\r\n    },\r\n    authMe() {\r\n        return axiosInstance.post<ResponseTypeProfile>('/auth/me')\r\n    },\r\n    changeName(name: string) {\r\n        return axiosInstance.put<{ updatedUser: ResponseTypeProfile }>('/auth/me', {name: name})\r\n    },\r\n    changePas(password: string, token: string) {\r\n        return axiosInstance.post('/auth/set-new-password', {\r\n            password: password,\r\n            resetPasswordToken: token\r\n        })\r\n    }\r\n\r\n\r\n    }\r\n\r\n\r\nexport const ApiRegistration = {\r\n    register(email: string, password: string) {\r\n        return axiosInstance.post <ResponseTypeRegistration>('auth/register', {email, password})\r\n    }\r\n}\r\n\r\n\r\nexport const ApiPack = {\r\n    getCardPacks(pageCount:number,page: number, user_id?:string,  min?: number, max?: number, packName?: string, sortPacks?:SortArrowValues) {\r\n        return axiosInstance.get<ResponseTypeCardsPacks>(`cards/pack`, {params: {page, pageCount, user_id, min, max, packName, sortPacks}})\r\n    },\r\n    addCardPacks(body: { name: string }) {\r\n        return axiosInstance.post<ResponseTypeCardsPacksData>(`cards/pack`, {cardsPack: body})\r\n    },\r\n    deleteCardPack(id: string) {\r\n        return axiosInstance.delete<ResponseTypeCardsPacksData>(`cards/pack`, {params: {id}})\r\n    },\r\n    putCardPack(body: { _id: string, name: string }) {\r\n        return axiosInstance.put<ResponseTypeCardsPacksData>(`cards/pack`, {cardsPack: body})\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface ResponseTypeCardsData {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id?: string\r\n    created: string\r\n    updated?: Date\r\n    __v?: number\r\n    _id: string\r\n}\r\n\r\n\r\nexport interface ResponseTypeCardsType {\r\n    cards: Array<ResponseTypeCardsData> | null\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n    packUserId: string\r\n}\r\n\r\nexport const ApiCards = {\r\n    getCards(cardsPack_id: string, pageCount?: number, page?: number,) {\r\n        return axiosInstance.get<ResponseTypeCardsType>(\"cards/card\", {params: {cardsPack_id, page, pageCount}})\r\n    },\r\n    addCards(cardsPack_id: string, question: string) {\r\n        return axiosInstance.post<ResponseTypeCardsData>(\"cards/card\", {card: {cardsPack_id, question}})\r\n    },\r\n    deleteCards(id: string) {\r\n        return axiosInstance.delete<ResponseTypeCardsData>(\"cards/card\", {params: {id}})\r\n    },\r\n    putCards(_id: string, question: string){\r\n        return axiosInstance.put<ResponseTypeCardsData>(\"cards/card\", {card: {_id, question}})\r\n    },\r\n    setGrade(card_id:string, grade:number) {\r\n        return axiosInstance.put('cards/grade', {card_id, grade})\r\n    }\r\n\r\n}","export interface stateProps {\r\n    isInitial: boolean\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    isInitial: false,\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_INITIAL_APP = 'APP/INITIAL_APP',\r\n\r\n}\r\n\r\n//actions\r\nexport type AppType = ReturnType<typeof setInitialApp>\r\n\r\n\r\nexport const AppReducer = (state: stateProps = initialState, action: AppType): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_INITIAL_APP:\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setInitialApp = (isInitial:boolean) => ({type:ActionType.SET_INITIAL_APP, payload:{isInitial}})\r\n\r\n\r\n\r\n","import {ApiAuth} from \"../../API/Api\";\r\nimport {setProfileAc} from \"../ProfileReducer/ProfileReducer\";\r\nimport {AppThunk} from \"../Store\";\r\nimport {setInitialApp} from \"../AppReducer/AppReducer\";\r\n\r\nexport type RequestStatusType = 'loading' | 'succeeded' | 'failed'\r\n\r\nexport interface stateProps {\r\n    isLogin: boolean\r\n    status: RequestStatusType\r\n    errorMes: string | undefined\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    isLogin: false,\r\n    status: \"succeeded\",\r\n    errorMes: undefined\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_LOGIN = 'AUTH/SET_LOGIN',\r\n    SET_STATUS = 'AUTH/SET_STATUS',\r\n    SET_ERROR_MES = 'AUTH/SET_ERROR_MES'\r\n}\r\n\r\n//actions\r\n\r\n// interface Action<T> {\r\n//     type: ActionType,\r\n//     payload: T\r\n// }\r\n\r\n\r\nconst AuthReducer = (state: stateProps = initialState, action: AuthType): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_LOGIN:\r\n            return {...state, ...action.payload}\r\n        case ActionType.SET_STATUS: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case ActionType.SET_ERROR_MES:\r\n            return {...state, ...action.payload}\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setLoginAC = (isLogin: boolean) => ({type: ActionType.SET_LOGIN, payload: {isLogin}})\r\nexport const setStatusAC = (status: RequestStatusType) => ({type: ActionType.SET_LOGIN, payload: {status}})\r\n\r\nexport const setErrorMes = (errorMes: string) => ({type: ActionType.SET_ERROR_MES, payload: {errorMes}})\r\nexport const setLoginT = (email: string, password: string, rememberMe: boolean): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.login(email, password, rememberMe)\r\n        .then(res => {\r\n            dispatch(setProfileAc(res.data))\r\n            dispatch(setLoginAC(true))\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            console.log('Error:', {...e})\r\n            dispatch(setErrorMes(error))\r\n            dispatch(setLoginAC(false))\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\nexport const setLogOut = (): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.logOut()\r\n        .then(() => {\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setLoginAC(false))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            dispatch(setErrorMes(error))\r\n            console.log('Error:', {...e})\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\n\r\nexport const setAuthMe = (): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.authMe()\r\n        .then(res => {\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setProfileAc(res.data))\r\n            dispatch(setLoginAC(true))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            console.log('Error:', {...e})\r\n            dispatch(setLoginAC(false))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setInitialApp(true))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\nexport const setChangeName = (name: string): AppThunk => (dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    ApiAuth.changeName(name)\r\n        .then(res => {\r\n            dispatch(setErrorMes(''))\r\n            dispatch(setProfileAc(res.data.updatedUser))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            dispatch(setErrorMes(error))\r\n            dispatch(setLoginAC(false))\r\n            console.log('Error:', {...e})\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\n\r\n\r\nexport type AuthType = ReturnType<typeof setLoginAC> | ReturnType<typeof setStatusAC> | ReturnType<typeof setErrorMes>\r\n\r\nexport default AuthReducer","import { ThunkDispatch } from \"redux-thunk\";\r\nimport {RequestStatusType} from \"../AuthReducer/AuthReducer\";\r\nimport {AppRootStateType} from \"../Store\";\r\nimport {ApiRegistration} from \"../../API/Api\";\r\n\r\n\r\nexport interface dataProps {\r\n    email: string,\r\n    error: string | undefined\r\n}\r\n\r\n\r\nexport interface stateProps {\r\n    isRegistration: boolean,\r\n    status: RequestStatusType;\r\n    data: dataProps\r\n\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    isRegistration: false,\r\n    status: \"succeeded\",\r\n    data : {\r\n        email: '',\r\n        error: undefined\r\n    }\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_IS_REGISTRATION = \"REGISTRATION_CONTAINER/SET_IS_REGISTRATION\",\r\n    SET_STATUS = \"REGISTRATION_CONTAINER/SET_STATUS\",\r\n    SET_DATA = \"REGISTRATION_CONTAINER/SET_DATA\",\r\n    SET_ERROR  = \"REGISTRATION_CONTAINER/SET_ERROR\"\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\n\r\n// ActionCreate\r\nexport const setRegistration = (isRegistration: boolean): Action<boolean> => ({\r\n    type: ActionType.SET_IS_REGISTRATION,\r\n    payload: isRegistration\r\n});\r\n\r\n\r\nexport const setStatus = (status : RequestStatusType): Action<RequestStatusType> => ({\r\n    type: ActionType.SET_STATUS,\r\n    payload: status\r\n});\r\n\r\nexport const setData = (data: {\r\n    email: string,  error?: string | undefined\r\n}): Action<{ email: string, error?: string | undefined }> => ({\r\n    type: ActionType.SET_DATA,\r\n    payload: data\r\n})\r\nexport const setError = (error: string | undefined): Action< string | undefined > => ({\r\n    type: ActionType.SET_ERROR,\r\n    payload: error\r\n})\r\n\r\n\r\n\r\n//Thunk\r\nexport const putData = (email: string, password: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, TypeActions>) => {\r\n        dispatch(setStatus('loading'))\r\n        ApiRegistration.register(email, password)\r\n            .then (res => {\r\n                dispatch(setStatus(\"succeeded\"))\r\n                dispatch(setRegistration(true))\r\n            })\r\n            .catch(e => {\r\n                const error = e.response\r\n                    ? e.response.data.error\r\n                    : (e.response.data.error + 'check console')\r\n                console.log(error)\r\n                console.log('errors:', {...e})\r\n                dispatch(setError(error))\r\n                dispatch(setStatus(\"failed\"))\r\n            })\r\n            .finally(()=> dispatch(setRegistration(false)))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst RegistrationReducer = (state: stateProps = initialState, action: Action<boolean & RequestStatusType>): stateProps => {\r\n    switch (action.type) {\r\n        //initial Data\r\n        case ActionType.SET_DATA:\r\n            return {...state, data: action.payload}\r\n        //values from UI for push Email and password if VALID\r\n        case ActionType.SET_ERROR: {\r\n            return {...state, data: {...state.data, error: action.payload}}\r\n        }\r\n        case ActionType.SET_IS_REGISTRATION:\r\n            return {\r\n                ...state, isRegistration: action.payload\r\n            };\r\n        //values from UI for push Password\r\n        case ActionType.SET_STATUS:\r\n            return {\r\n                ...state, status: action.payload\r\n            };\r\n    }\r\n    return state\r\n}\r\n\r\n\r\n//types\r\ntype TypeActions = ReturnType<typeof setData> |\r\n    ReturnType<typeof setRegistration> |\r\n    ReturnType<typeof setStatus> | ReturnType<typeof setError>\r\n\r\nexport default RegistrationReducer","import React, { Fragment } from \"react\";\r\nimport s from './Spinner.module.scss';\r\n\r\nconst Spinner = () => {\r\n\r\n    let arrStyle = [];\r\n    for (let i = 1; i < 21; i++) {\r\n        arrStyle.push({\"--i\": i} as React.CSSProperties)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <section>\r\n                <div className={s.loader}>\r\n                    {\r\n                        arrStyle.map((item, inx) => {\r\n                            return <span style={item} key={inx}/>\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n            </section>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export const validateInputNewPas = (setPassword:Function, value:string, setErrorMesPas:Function, setErrorPas:Function) => {\r\n    const rePassword = /(?=.*\\d)(?=.*[a-zA-Z]).{6,}/;\r\n    setPassword(value)\r\n    if (value.trim() === '') {\r\n        setErrorMesPas('Password Required')\r\n        setErrorPas(true)\r\n    } else if (!rePassword.test(value)) {\r\n        console.log(rePassword.test(value))\r\n        setErrorPas(true)\r\n        setErrorMesPas('the password must contain one digit, and length must be 6 and more')\r\n\r\n    } else {\r\n        setErrorMesPas('')\r\n        setErrorPas(false)\r\n    }\r\n\r\n}","import {FC, useState} from \"react\";\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport SuperCheckbox from \"../../../Components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport style from './AuthContainer.module.css'\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {Redirect, NavLink} from \"react-router-dom\";\r\nimport {setErrorMes, setLoginT} from \"../../../Redux/AuthReducer/AuthReducer\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport {validateInputNewPas} from \"../../../Utils/Validation/ValidationPassword\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst AuthContainer: FC<Props> = () => {\r\n    const reEmail = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n\r\n    const [email, setEmail] = useState<string>('nya-admin@nya.nya')\r\n    const [errorLog, setErrorLog] = useState<boolean>(false)\r\n    const [password, setPassword] = useState<string>('1qazxcvBG')\r\n    const [errorMesLog, setErrorMesLog] = useState<string>('Login Required')\r\n    const [errorMesPas, setErrorMesPas] = useState<string>('Password Required')\r\n    const [errorPas, setErrorPas] = useState<boolean>(false)\r\n    const [check, setCheck] = useState<boolean>(false)\r\n    const isLogin = useSelector((state: AppRootStateType) => state.auth.isLogin)\r\n    const status = useSelector((state: AppRootStateType) => state.auth.status)\r\n    const errordata = useSelector((state: AppRootStateType) => state.auth.errorMes)\r\n\r\n    const dispatch = useDispatch()\r\n    const validateInputLog = (value: string) => {\r\n        setEmail(value)\r\n        if (value.trim() === '') {\r\n            setErrorMesLog('Email Required')\r\n            setErrorLog(true)\r\n\r\n        } else if (!reEmail.test(value)) {\r\n            setErrorLog(true)\r\n            setErrorMesLog('Email invalid')\r\n        } else {\r\n            setErrorMesLog('')\r\n            setErrorLog(false)\r\n        }\r\n    }\r\n    const changeInputValuePassword = (value: string) => {\r\n        validateInputNewPas(setPassword, value, setErrorMesPas, setErrorPas)\r\n    }\r\n    const logHandler = () => {\r\n\r\n        if (email && password) {\r\n            dispatch(setLoginT(email, password, check))\r\n        } else {\r\n            dispatch(setErrorMes('Password and Email Required'))\r\n        }\r\n\r\n    }\r\n\r\n    if (isLogin) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.auth_main}>\r\n                <h3>Login</h3>\r\n                <div className={style.auth_wrapper}>\r\n                    <div className={style.input_block}>\r\n                        <SuperInputText\r\n                            value={email}\r\n                            onChangeText={validateInputLog}\r\n                            error={errorLog}\r\n                            placeholder={'E-mail'}\r\n                            errorMes={errorMesLog}\r\n                            setError={setErrorLog}\r\n                            className={'otherInput'}\r\n\r\n                        />\r\n                        <SuperInputText\r\n                            value={password}\r\n                            onChangeText={changeInputValuePassword}\r\n                            error={errorPas}\r\n                            placeholder={'Password'}\r\n                            errorMes={errorMesPas}\r\n                            setError={setErrorPas}\r\n                            type={'password'}\r\n                            className={'otherInput'}\r\n                        />\r\n                        <div className={style.auth_link}>\r\n                            <span><NavLink to={RoutingType.registration}>Registration</NavLink></span>\r\n                            <span><NavLink to={RoutingType.resPass}>Forgot Pas?</NavLink></span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.btn_check}>\r\n                        <SuperCheckbox\r\n                            onChangeChecked={setCheck}\r\n                        > Remember </SuperCheckbox>\r\n                        <SuperButton\r\n                            onClick={logHandler}\r\n                            disabled={status === 'loading'}\r\n                        >\r\n                            Login\r\n                        </SuperButton>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    status === 'loading'\r\n                        ? <Spinner/>\r\n                        : status === 'failed'\r\n                        ? <div>\r\n                            <h5 className={style.errorMesOp}> {errordata}</h5></div>\r\n                        : ''\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default AuthContainer","import {RequestStatusType} from \"../AuthReducer/AuthReducer\";\r\nimport {AppThunk} from \"../Store\";\r\nimport {ApiAuth} from \"../../API/Api\";\r\n\r\nexport interface stateProps {\r\n    checkWith: boolean\r\n    status: RequestStatusType\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    checkWith: false,\r\n    status: \"succeeded\"\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    SET_CHECK_WITH = 'RES-PASS/SET-CHECK-WITH',\r\n    SET_STATUS = 'RES-PASS/SET_STATUS'\r\n}\r\n\r\n\r\n//actions\r\n\r\nexport const setStatus = (status: RequestStatusType) => ({type: ActionType.SET_STATUS, payload: {status}})\r\nexport const setChekWith = (checkWith: boolean) => ({type: ActionType.SET_CHECK_WITH, payload: {checkWith}})\r\n\r\n\r\nconst ResPasswordReducer = (state: stateProps = initialState, action: ResPasswordType): stateProps => {\r\n    switch (action.type) {\r\n        case ActionType.SET_STATUS: {\r\n            return {...state, ...action.payload}\r\n        }\r\n        case ActionType.SET_CHECK_WITH: {\r\n            return {...state, ...action.payload}\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\nexport const setChekWithThunk = (email: string): AppThunk => async (dispatch) => {\r\n    dispatch(setStatus('loading'))\r\n    try {\r\n        await ApiAuth.recovery(email)\r\n        dispatch(setChekWith(true))\r\n        dispatch(setStatus('succeeded'))\r\n    } catch (e) {\r\n        const error = e.response\r\n            ? e.response.data.error\r\n            : (e.message + ', more details in the console');\r\n        console.log(error)\r\n        dispatch(setStatus('failed'))\r\n    }\r\n\r\n}\r\n\r\nexport type ResPasswordType = ReturnType<typeof setStatus> | ReturnType<typeof setChekWith>\r\n\r\nexport default ResPasswordReducer","import {FC, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {RequestStatusType} from \"../../../Redux/AuthReducer/AuthReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport {dataProps, putData} from \"../../../Redux/RegistrationReducer/RegistartionReducer\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport style from './Registration.module.scss'\r\nimport {Paper} from \"@material-ui/core\";\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst RegistrationContainer: FC<Props> = () => {\r\n    //reducer variable\r\n    const isRegistration = useSelector<AppRootStateType, boolean>(state => state.registration.isRegistration);\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.registration.status);\r\n    const data = useSelector<AppRootStateType, dataProps>( state => state.registration.data)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    //validate Email with Password\r\n    const reEmail = /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i;\r\n    const rePassword = /(?=.*\\d)(?=.*[a-zA-Z]).{6,}/;\r\n\r\n\r\n    //values of Email, Password, Confirm Password\r\n    const [email, setEmail] = useState<string>(data.email)\r\n    const [password, setPassword] = useState<string>()\r\n    const [confirmPassword, setConfirmPassword] = useState<string>()\r\n\r\n\r\n    //isValid of Email, Password, Confirm Password\r\n    const [isValidEmail, setIsValidEmail] = useState<boolean>(false)\r\n    const [isValidPassword, setIsValidPassword] = useState<boolean>(false)\r\n    const [isValidConfirmPassword, setIsValidConfirmPassword] = useState<boolean>(false)\r\n\r\n\r\n    //Error\r\n    const [errorEmail, setErrorEmail] = useState<string>('Login Required')\r\n    const [errorPassword, setErrorPassword] = useState<string>('Password must be with number and A-Z, a-z letters, length must be 6 and more')\r\n    const [errorConfirmPassword, setErrorConfirmPassword] = useState<string>('passwords must match')\r\n\r\n\r\n\r\n\r\n    //validate for Email\r\n    const isValidateEmailReg = (value: string) => {\r\n        setEmail(value)\r\n        if (value.trim() === '') {\r\n            setErrorEmail('Email is Required')\r\n            setIsValidEmail(true)\r\n\r\n        } else\r\n            // if value inValid of reEmail\r\n        if (!reEmail.test(value)) {\r\n            setErrorEmail('Invalid Email')\r\n            setIsValidEmail(true)\r\n\r\n        } else {\r\n            // else value email valid of reEmail\r\n            setErrorEmail('')\r\n            setIsValidEmail(false)\r\n\r\n        }\r\n    }\r\n    //validate for Password\r\n    const validatePassword = (value: string) => {\r\n        setPassword(value)\r\n        if (value.trim() === '' && value.length > 8) {\r\n\r\n            setIsValidPassword(true)\r\n            setErrorPassword('Password area is Required')\r\n\r\n        } else if (!rePassword.test(value)) {\r\n            setIsValidPassword(true)\r\n            setErrorPassword('the password must contain one digit, and length must be 8 and more')\r\n        } else {\r\n            setIsValidPassword(false)\r\n            setErrorPassword('')\r\n        }\r\n    }\r\n    //validate for ConfirmPassword\r\n    // confirmValue === passwordValue => true , else error\r\n    const validateConfirmPassword = (value: string) => {\r\n        setConfirmPassword(value)\r\n\r\n        if (value !== password) {\r\n            setIsValidConfirmPassword(true)\r\n            setErrorConfirmPassword('Passwords must be the sames!')\r\n\r\n        } else {\r\n            setIsValidConfirmPassword(false)\r\n            setErrorConfirmPassword('')\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //if validate false and email area is valid => registration , btnDisabled - false\r\n    const onRegistrationHandler = () => {\r\n        if (email && password && confirmPassword) {\r\n            dispatch(putData(email, password))\r\n\r\n        }\r\n    }\r\n\r\n\r\n    // reducer registration changed on True if all input valid\r\n    if (isRegistration) {\r\n        return <Redirect to={RoutingType.auth}/>\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (<div className={style.container}>\r\n        <h1>Registration</h1>\r\n        <Paper className={style.reg_wrapper}>\r\n            {/*Email*/}\r\n            <h2>E-mail:</h2>\r\n            <Paper>\r\n                <SuperInputText\r\n                    onChangeText={isValidateEmailReg}\r\n                    error={isValidEmail}\r\n                    placeholder={'E-mail'}\r\n                    errorMes={errorEmail}\r\n                    setError={setIsValidEmail}\r\n                    className={'otherInput'}\r\n\r\n                />\r\n            </Paper>\r\n\r\n\r\n            {/*password*/}\r\n\r\n                <h2>Password:</h2>\r\n            <Paper>\r\n                <SuperInputText\r\n                    onChangeText={validatePassword}\r\n                    error={isValidPassword}\r\n                    placeholder={'Password'}\r\n                    errorMes={errorPassword}\r\n                    setError={setIsValidPassword}\r\n                    className={'otherInput'}\r\n                    type={'password'}\r\n                />\r\n            </Paper>\r\n\r\n\r\n\r\n\r\n\r\n            {/*confirm password*/}\r\n            <h2>Confirm Password:</h2>\r\n            <Paper>\r\n                <SuperInputText\r\n                    onChangeText={validateConfirmPassword}\r\n                    error={isValidConfirmPassword}\r\n                    placeholder={'Confirm Password'}\r\n                    errorMes={errorConfirmPassword}\r\n                    setError={setIsValidPassword}\r\n                    className={'otherInput'}\r\n                    type={'password'}\r\n                />\r\n            </Paper>\r\n\r\n        </Paper>\r\n        <div>\r\n            <SuperButton\r\n                onClick={onRegistrationHandler}\r\n                disabled={status === 'loading'}\r\n                className={style.btn}\r\n            >\r\n                Registration\r\n            </SuperButton>\r\n        </div>\r\n\r\n    <div>\r\n        {\r\n            status === 'loading'\r\n                ? <Spinner/>\r\n                : status === 'failed'\r\n                ? <div>\r\n                    <h1>{data.error}</h1></div>\r\n                : ''\r\n        }\r\n    </div>\r\n\r\n    </div>)\r\n}\r\n\r\nexport default RegistrationContainer\r\n","import React, {FC} from 'react';\r\nimport style from './Modal.module.scss'\r\n\r\n\r\ninterface ModalType {\r\n    modal: boolean\r\n    setModal: (value: boolean) => void\r\n}\r\n\r\n\r\nconst Modal: FC<ModalType> = ({modal, setModal, children}) => {\r\n    const finalModalClassName = `${style.modal} ${modal ? style.active : \"\"}`;\r\n    const finalModalContentClassName = `${style.modal_content} ${modal ? style.active : \"\"}`;\r\n    return (\r\n        <div className={finalModalClassName} onClick={ () => setModal(false)}>\r\n            <div className={finalModalContentClassName} onClick={e =>  e.stopPropagation()}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, {FC, useState} from 'react';\r\nimport SuperInputText from \"../../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../../Components/c2-SuperButton/SuperButton\";\r\nimport Modal from \"../../../../Components/Modal/Modal\";\r\nimport {setChangeName} from \"../../../../Redux/AuthReducer/AuthReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport style from \"../ProfileContainer.module.scss\";\r\n\r\ninterface Props {\r\n    errorMes?: string\r\n}\r\nconst ProfileChangeName:FC<Props> = ({errorMes}) => {\r\n\r\n    const [name, setName] = useState<string>()\r\n    const [modal, setModal] = useState<boolean>(false)\r\n    const dispatch = useDispatch();\r\n    const changeNameHandler = () => {\r\n        if (name) {\r\n            dispatch(setChangeName(name))\r\n            setModal(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <span className={style.change_name} onClick={() => setModal(true)}>Change name</span>\r\n            <Modal\r\n                modal={modal}\r\n                setModal={setModal}\r\n            >\r\n                <SuperInputText\r\n                    value={name}\r\n                    onChangeText={setName}\r\n                    placeholder={'New-Name'}\r\n\r\n                />\r\n                <SuperButton onClick={changeNameHandler}>Change Name</SuperButton>\r\n                {!!errorMes? <span>errorMes</span> : null}\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileChangeName;","import React, {FC, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport {setLogOut} from \"../../../Redux/AuthReducer/AuthReducer\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport style from './ProfileContainer.module.scss'\r\nimport ProfileChangeName from \"./ProfileChangeName/ProfileChangeName\";\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ProfileContainer: FC<Props> = () => {\r\n    const isLogin = useSelector((state: AppRootStateType) => state.auth.isLogin)\r\n    const profile = useSelector((state: AppRootStateType) => state.profile.profile)\r\n    const status = useSelector((state: AppRootStateType) => state.auth.status)\r\n    const errorMes = useSelector((state: AppRootStateType) => state.auth.errorMes)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n\r\n    })\r\n\r\n    if (!isLogin || !profile) {\r\n        return <Redirect to={'/auth'}/>\r\n    }\r\n    const logOutHandler = () => {\r\n        dispatch(setLogOut())\r\n    }\r\n    if (status === \"loading\") {\r\n        return <Spinner/>\r\n    } else if (status === \"failed\") {\r\n        return (\r\n            <div>\r\n                <h1>something wrong</h1>\r\n            </div>\r\n        )\r\n    }\r\n    if (profile) {\r\n        return (\r\n            <div className={style.profile_main_wrapper}>\r\n                <div>\r\n                    <h1>Profile</h1>\r\n                </div>\r\n                <div className={style.profile_item_wrapper}>\r\n                    <div className={style.profile_item}><span className={style.item_title}>E-mail:</span> <span>{profile.email}</span></div>\r\n                    <div className={style.profile_item}><span className={style.item_title}>name:</span> <span>{profile.name}</span>\r\n                        <ProfileChangeName errorMes={errorMes}/>\r\n                    </div>\r\n                    <div className={style.profile_item}><span className={style.item_title}>id:</span><span>{profile._id}</span></div>\r\n                </div>\r\n                <Link to={RoutingType.auth} onClick={logOutHandler}>\r\n                    <span>Log Out</span>\r\n                </Link>\r\n\r\n            </div>)\r\n    } else {\r\n        return <div/>\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default ProfileContainer","import {FC} from \"react\";\r\n\r\ninterface Props {\r\n    title: string\r\n}\r\n\r\n\r\nconst ResPassword: FC<Props> = ({\r\n                                   title, ...props\r\n                                }) => {\r\n    return (<div>\r\n        <h3>{title}</h3>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default ResPassword","import {AppThunk} from \"../Store\";\r\nimport {ApiAuth} from \"../../API/Api\";\r\n\r\n\r\nexport interface stateProps {\r\n    changeMes: boolean\r\n    errorMes?: string\r\n    loading: boolean\r\n\r\n\r\n}\r\n//Type\r\nexport enum ActionType {\r\n    NEW_CHANGE_MES = 'NEW_PAS/NEW_CHANGE_MES',\r\n    ERROR_MES = 'NEW_PAS/ERROR_MES',\r\n    LOADING = 'NEW_PAS/LOADING'\r\n}\r\n\r\nconst initialState: stateProps = {\r\n    changeMes: false,\r\n    errorMes: undefined,\r\n    loading:false\r\n}\r\n//actions\r\nexport const setNewMes = (changeMes:boolean) => ({type:ActionType.NEW_CHANGE_MES, payload:{changeMes}})\r\nexport const setErrorMes = (errorMes:string) => ({type:ActionType.ERROR_MES, payload: {errorMes}})\r\nconst loadingNewPas = (loading:boolean) => ({type:ActionType.LOADING, payload:{loading}})\r\n\r\nexport type NewMesActionType = ReturnType<typeof setNewMes> | ReturnType<typeof setErrorMes>| ReturnType<typeof loadingNewPas>\r\n\r\n\r\n\r\n\r\nconst NewPasswordReducer = (state: stateProps = initialState, action: NewMesActionType): stateProps => {\r\n    switch (action.type) {\r\n\r\n        case ActionType.NEW_CHANGE_MES:\r\n            return {...state, ...action.payload}\r\n        case ActionType.ERROR_MES:\r\n            return {...state, ...action.payload}\r\n        case ActionType.LOADING:\r\n            return {...state, ...action.payload}\r\n        default: return state\r\n    }\r\n\r\n}\r\n\r\nexport const ChangePassword = (password: string, token:string):AppThunk => (dispatch) => {\r\n    dispatch(loadingNewPas(true))\r\n    ApiAuth.changePas(password, token)\r\n        .then(res => {\r\n            dispatch(setNewMes(true))\r\n        })\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error)\r\n            console.log('Error:', {...e})\r\n            dispatch(setErrorMes(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(loadingNewPas(false))\r\n            dispatch(setNewMes(false))\r\n        })\r\n}\r\n\r\nexport default NewPasswordReducer","import {FC} from \"react\";\r\nimport ResPasswordComponent from \"./ResPasswordComponent\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from 'formik';\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport style from './ResPassword.module.css'\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport {setChekWithThunk} from \"../../../Redux/ResPassReducer/ResPasswordReducer\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\ntype ErrorType = {\r\n    email?: string\r\n}\r\n\r\n\r\nconst ResPasswordContainer : FC <Props> = ({\r\n     ...props\r\n}) => {\r\n\r\n    const checkWith  = useSelector((state: AppRootStateType) => state.resPas.checkWith)\r\n    const status  = useSelector((state: AppRootStateType) => state.resPas.status)\r\n    const dispatch = useDispatch();\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: ''\r\n        },\r\n        onSubmit: (values) => {\r\n           dispatch( setChekWithThunk(values.email) )\r\n            formik.resetForm();\r\n        },\r\n        validate: (values) => {\r\n            const errors: ErrorType = {};\r\n\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            return errors;\r\n        }\r\n    });\r\n\r\n\r\n    if(status === \"loading\") {\r\n        return <Spinner/>\r\n    } else if (status === \"failed\") {\r\n        return (\r\n            <div>\r\n                <h1>something wrong</h1>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (checkWith) {\r\n        return  <Redirect to={RoutingType.auth}/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.res_Password_wrapper}>\r\n\r\n        <ResPasswordComponent title = {'Reset Password Page'}/>\r\n        <form onSubmit={formik.handleSubmit}>\r\n\r\n            <div className={style.input_style}>\r\n                <SuperInputText\r\n                    type={'email'}\r\n                    placeholder={'E-mail'}\r\n                    {...formik.getFieldProps('email')}\r\n                />\r\n            </div>\r\n            {\r\n                formik.touched.email && formik.errors.email\r\n                    ? <div className={style.error}>{formik.errors.email}</div> : null\r\n            }\r\n\r\n            <SuperButton type={'submit'} >\r\n                Send email\r\n            </SuperButton>\r\n        </form>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default ResPasswordContainer","import {ApiPack, ResponseTypeCardsPacksData} from \"../../API/Api\";\r\nimport {RequestStatusType} from \"../AuthReducer/AuthReducer\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"../Store\";\r\nimport HelperErrorCatch from \"../../Utils/Helpers/HelperErrorCatch\";\r\n\r\n\r\nexport interface stateProps {\r\n    cardPacks: ResponseTypeCardsPacksData[] | null    \r\n    error: string | undefined\r\n    status: RequestStatusType,\r\n    isDisabled: boolean,\r\n    pageSize: number\r\n    currentPage: number\r\n    isPrivat: boolean\r\n    cardsCount: {minCardsCount: number, maxCardsCount: number}\r\n    checkedCount: number[]\r\n    packName: null | string\r\n    cardPacksTotalCount: number | null\r\n    sortArrow: SortArrowValues | null\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    cardPacks: null,\r\n    status: \"succeeded\",\r\n    error: undefined,\r\n    isDisabled: false,\r\n    pageSize: 4,\r\n    currentPage: 1,\r\n    isPrivat: false,\r\n    cardPacksTotalCount: null,\r\n    cardsCount: {minCardsCount: 0, maxCardsCount: 50},\r\n    checkedCount:[0, 50],\r\n    packName: null,\r\n    sortArrow: null\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    GET_PACKS = \"/PACKS/GET_PACKS\",\r\n    SET_STATUS = \"/PACKS/SET_STATUS\",\r\n    SET_ERROR = 'PACKS/SET_ERROR',\r\n    IS_DISABLED = \"PACKS/ADD_BTN/IS_DISABLED\",\r\n    IS_PRIVAT = \"PACKS/CHECK/IS_PRIVAT\",\r\n    SET_PAGE_SIZE = \"PACKS/SET_PAGE_SIZE\",\r\n    SET_CURRENT_PAGE = \"PACKS/SET_CURRENT_PAGE\",\r\n    SET_PACKS_TOTAL_COUNT = \"PACKS/SET_PACKS_TOTAL_COUNT\",\r\n    SET_PACK_NAME = \"SET/PACK_NAME\",\r\n    SET_COUNT_RENGE = \"SET/COUNT_RENGE\",\r\n    SET_CARDS_COUNT = \"SET/CARDS_COUNT\",\r\n    SET_SORT_ARROW = \"SET_SORT_ARROW\"\r\n}\r\nexport enum SortArrowValues {\r\n    SORT_UP = \"0cardsCount\",\r\n    SORT_DOWN = \"1cardsCount\"\r\n\r\n}\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\n\r\n\r\nexport const getPacks = (data: ResponseTypeCardsPacksData[]): Action<ResponseTypeCardsPacksData[]> => ({\r\n    type: ActionType.GET_PACKS,\r\n    payload: data\r\n});\r\n\r\n\r\nexport const setStatus = (status: RequestStatusType): Action<RequestStatusType> => ({\r\n    type: ActionType.SET_STATUS,\r\n    payload: status\r\n})\r\n\r\nexport const setError = (error: string | undefined): Action<string | undefined> => ({\r\n    type: ActionType.SET_ERROR,\r\n    payload: error\r\n})\r\n\r\n\r\nexport const isDisabled = (isDisabled: boolean): Action<boolean> => ({\r\n    type: ActionType.IS_DISABLED,\r\n    payload: isDisabled\r\n})\r\nexport const seTisPrivat = (isPrivat: boolean): Action<boolean> => ({\r\n    type: ActionType.IS_PRIVAT,\r\n    payload: isPrivat\r\n})\r\nexport const setPageSizeAC = (pageSize: number): Action<number> => ({\r\n    type: ActionType.SET_PAGE_SIZE,\r\n    payload: pageSize\r\n})\r\nexport const setCurrentPageAC = (currentPage: number): Action<number> => ({\r\n    type: ActionType.SET_CURRENT_PAGE,\r\n    payload: currentPage\r\n})\r\nexport const setTotalCount = (cardPacksTotalCount: number): Action<number> => ({\r\n    type: ActionType.SET_PACKS_TOTAL_COUNT,\r\n    payload: cardPacksTotalCount\r\n})\r\n\r\nexport const setPackName = (name: string) => ({\r\n    type: ActionType.SET_PACK_NAME,\r\n        payload: name\r\n})\r\n\r\nexport const setCheckedCount = (count: Array<number> | number) => ({\r\n    type: ActionType.SET_COUNT_RENGE,\r\n    payload: count\r\n})\r\nexport const setSortArrow= (sortValue: SortArrowValues) => ({\r\n    type: ActionType.SET_SORT_ARROW,\r\n    payload: sortValue\r\n})\r\n\r\n const setCardsCount = (minCardsCount: number,  maxCardsCount: number) => ({\r\n    type: ActionType.SET_CARDS_COUNT,\r\n    payload: {\r\n        minCardsCount: minCardsCount,\r\n        maxCardsCount: maxCardsCount\r\n    }\r\n})\r\n\r\n\r\n\r\n//thunk\r\n\r\n\r\nexport const getPacksThunk = (pageSize: number, currentPage: number, user_id?: string) => (dispatch: ThunkDispatch<AppRootStateType, {}, TypeActions>, getState: () => AppRootStateType) => {\r\n    dispatch(setStatus('loading'))\r\n    const pageSize = getState().packsPage.pageSize\r\n    const currentPage = getState().packsPage.currentPage\r\n    const minCheckedCount = getState().packsPage.checkedCount[0]\r\n    const maxCheckedCount = getState().packsPage.checkedCount[1]\r\n    const packName = getState().packsPage.packName\r\n    const value = getState().packsPage.checkedCount\r\n    const sortPacks = getState().packsPage.sortArrow\r\n        ApiPack.getCardPacks(pageSize, currentPage, user_id, minCheckedCount, maxCheckedCount, packName || undefined, sortPacks || undefined)\r\n            .then(res => {\r\n                dispatch(isDisabled(false))\r\n                dispatch(setTotalCount(res.data.cardPacksTotalCount))\r\n                dispatch(getPacks(res.data.cardPacks))\r\n                if (value[1] > res.data.maxCardsCount) {\r\n                    dispatch(setCheckedCount([res.data.minCardsCount, res.data.maxCardsCount]));\r\n                }\r\n                dispatch(setCardsCount(res.data.minCardsCount, res.data.maxCardsCount))\r\n                dispatch(setStatus('succeeded'))\r\n            })\r\n            .catch(e => {\r\n                HelperErrorCatch(e, dispatch)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setStatus('succeeded'))\r\n            })\r\n}\r\nexport const addPacksThunk = (name:string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, TypeActions>, getState: () => AppRootStateType) => {\r\n        dispatch(setStatus('loading'))\r\n        const pageSize = getState().packsPage.pageSize\r\n        const currentPage = getState().packsPage.currentPage\r\n        const isPrivat = getState().packsPage.isPrivat\r\n        const profile = getState().profile.profile\r\n        ApiPack.addCardPacks({name})\r\n            .then(() => {\r\n                dispatch(isDisabled(true))\r\n                if(isPrivat && profile) {\r\n                    dispatch(getPacksThunk(pageSize,currentPage, profile._id))\r\n                } else {\r\n                    dispatch(getPacksThunk(pageSize,currentPage))\r\n                }\r\n\r\n\r\n            })\r\n            .catch(e => {\r\n                HelperErrorCatch(e, dispatch)\r\n            })\r\n\r\n\r\n    }\r\n\r\nexport const deletePackThunk = (_id: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, TypeActions>, getState: () => AppRootStateType) => {\r\n        const pageSize = getState().packsPage.pageSize\r\n        const currentPage = getState().packsPage.currentPage\r\n        const isPrivat = getState().packsPage.isPrivat\r\n        const profile = getState().profile.profile\r\n        dispatch(setStatus('loading'))\r\n        ApiPack.deleteCardPack(_id)\r\n            .then(() => {\r\n                dispatch(isDisabled(false))\r\n                if(isPrivat && profile) {\r\n                    dispatch(getPacksThunk(pageSize,currentPage, profile._id))\r\n                } else {\r\n                    dispatch(getPacksThunk(pageSize,currentPage))\r\n                }\r\n            })\r\n            .catch(e => {\r\n                HelperErrorCatch(e, dispatch)\r\n            })\r\n    }\r\n\r\nexport const onChangeNamePackThunk = ( _id: string, name: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, TypeActions>, getState: () => AppRootStateType) => {\r\n        const pageSize = getState().packsPage.pageSize\r\n        const currentPage = getState().packsPage.currentPage\r\n        const isPrivat = getState().packsPage.isPrivat\r\n        const profile = getState().profile.profile\r\n        ApiPack.putCardPack({_id,name})\r\n            .then ((res)=> {\r\n                console.log(res)\r\n                if(isPrivat && profile) {\r\n                    dispatch(getPacksThunk(pageSize,currentPage, profile._id))\r\n                } else {\r\n                    dispatch(getPacksThunk(pageSize,currentPage))\r\n                }\r\n\r\n            })\r\n            .catch(e => {\r\n                HelperErrorCatch(e, dispatch)\r\n        })\r\n    }\r\n\r\n\r\n\r\nconst PacksPageReducer = (state: stateProps = initialState, action: Action<ResponseTypeCardsPacksData[] &\r\n    RequestStatusType & ResponseTypeCardsPacksData & boolean & number>): stateProps => {\r\n    switch (action.type) {\r\n        //initial state from Back\r\n        case ActionType.GET_PACKS:\r\n            return {\r\n                ...state, cardPacks: action.payload\r\n            }\r\n\r\n        // loading | succeeded\r\n        case ActionType.SET_STATUS: {\r\n            return {\r\n                ...state, status: action.payload\r\n            }\r\n        }\r\n        // on BTN for addPacksThunk\r\n        case ActionType.IS_DISABLED:\r\n            return {\r\n                ...state, isDisabled: action.payload\r\n            }\r\n\r\n        // errors\r\n        case ActionType.SET_ERROR:\r\n            return {\r\n                ...state, error: action.payload\r\n            }\r\n        case ActionType.SET_PAGE_SIZE:\r\n            return {...state, pageSize: action.payload}\r\n        case ActionType.SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.payload}\r\n        case ActionType.IS_PRIVAT:\r\n            return {...state, isPrivat: action.payload}\r\n        case ActionType.SET_PACK_NAME:\r\n            return {...state, packName: action.payload}\r\n        case ActionType.SET_COUNT_RENGE:\r\n            return {...state, checkedCount: action.payload}\r\n        case ActionType.SET_CARDS_COUNT:\r\n            return {...state,cardsCount: action.payload}\r\n        case ActionType.SET_PACKS_TOTAL_COUNT:\r\n            return {...state, cardPacksTotalCount: action.payload}\r\n        case ActionType.SET_SORT_ARROW:\r\n            return {...state, sortArrow: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport type TypeActions = ReturnType<typeof getPacks> | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof setError> | ReturnType<typeof isDisabled> | ReturnType<typeof setPackName> | ReturnType<typeof setCheckedCount>\r\n| ReturnType<typeof setCardsCount>\r\n    | ReturnType<typeof setError> | ReturnType<typeof isDisabled> | ReturnType<typeof setCurrentPageAC>| ReturnType<typeof setTotalCount>\r\n\r\nexport default PacksPageReducer","import React, {FC, useState} from \"react\";\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {validateInputNewPas} from \"../../../Utils/Validation/ValidationPassword\";\r\nimport {ChangePassword} from \"../../../Redux/NewPassReducer/NewPassReducer\";\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\nimport style from './NewPasswordContainer.module.scss'\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst NewPasswordContainer: FC<Props> = () => {\r\n    const [password, setPassword] = useState<string>()\r\n    const [confirmPassword, setConfirmPassword] = useState<string>()\r\n    const [errorMesPas, setErrorMesPas] = useState<string>('Password Required')\r\n    const [errorMesConfirmPas, setErrorMesConfirmPas] = useState<string>('Confirm password Required\\'')\r\n    const [isValidPassword, setIsValidPassword] = useState<boolean>(true)\r\n    const [isValidConfirmPassword, setIsValidConfirmPassword] = useState<boolean>(false)\r\n    const errorMes = useSelector((state: AppRootStateType) => state.newPas.errorMes)\r\n    const loading = useSelector((state: AppRootStateType) => state.newPas.loading)\r\n    const isChange = useSelector((state: AppRootStateType) => state.newPas.changeMes)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const history = useHistory()\r\n    const regUrl = /(\\/.+\\/)/gm\r\n\r\n    const token = history.location.pathname.replace(regUrl, \"\")\r\n\r\n    const validPasswordValue = (value: string) => {\r\n        validateInputNewPas(setPassword, value, setErrorMesPas, setIsValidPassword)\r\n    }\r\n    const validConfirmPasswordValue = (value: string) => {\r\n        validateInputNewPas(setConfirmPassword, value, setErrorMesConfirmPas, setIsValidConfirmPassword)\r\n        if (value !== password) {\r\n            setIsValidConfirmPassword(true)\r\n            setErrorMesConfirmPas('passwords must match')\r\n        } else {\r\n            setIsValidConfirmPassword(false)\r\n        }\r\n    }\r\n    const changePasswordHandler = () => {\r\n        if (password) {\r\n            dispatch(ChangePassword(password, token))\r\n        }\r\n        setPassword('')\r\n    }\r\n    if(isChange) {\r\n        return <Redirect to={'/auth'}/>\r\n    }\r\n    return (\r\n        <div className={style.wrapper_main}>\r\n            <div className={style.wrapper_items}>\r\n                <SuperInputText\r\n                    value={password}\r\n                    onChangeText={validPasswordValue}\r\n                    placeholder={'New Password'}\r\n                    error={isValidPassword}\r\n                    errorMes={errorMesPas}\r\n                    setError={setIsValidPassword}\r\n                    type={'password'}\r\n                />\r\n                <SuperInputText\r\n                    value={confirmPassword}\r\n                    onChangeText={validConfirmPasswordValue}\r\n                    placeholder={'Confirm Password'}\r\n                    error={isValidConfirmPassword}\r\n                    errorMes={errorMesConfirmPas}\r\n                    setError={setIsValidConfirmPassword}\r\n                    type={'password'}\r\n                />\r\n                <div><SuperButton onClick={changePasswordHandler} disabled={loading || password !== confirmPassword}>Change\r\n                    password</SuperButton></div>\r\n                {loading ? <Spinner/> : null}\r\n                {!!errorMes ? <span>errorMes</span> : null}\r\n\r\n            </div>\r\n        </div>)\r\n}\r\n\r\n\r\nexport default NewPasswordContainer","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Error404.module.css'\r\n\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <div className={style.wrapped}>\r\n            <figure>\r\n                <div className={style.sadMac}/>\r\n                <NavLink to={'/'}>\r\n                    GO TO HOME\r\n                </NavLink>\r\n                <figcaption>\r\n                    <span className={style.srText}>Error 404: Not Found</span>\r\n                    <span className={style.e}/>\r\n                    <span className={style.r}/>\r\n                    <span className={style.r}/>\r\n                    <span className={style.o}/>\r\n                    <span className={style.r}/>\r\n                    <span className={style._4}/>\r\n                    <span className={style._0}/>\r\n                    <span className={style._4}/>\r\n                    <span className={style.n}/>\r\n                    <span className={style.o}/>\r\n                    <span className={style.t}/>\r\n                    <span className={style.f}/>\r\n                    <span className={style.o}/>\r\n                    <span className={style.u}/>\r\n                    <span className={style.n}/>\r\n                    <span className={style.d}/>\r\n                </figcaption>\r\n\r\n            </figure>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error404;","import {FC} from \"react\";\r\nimport Error404 from \"./Error404\";\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst ErrorContainer: FC<Props> = () => {\r\n    return (<div>\r\n        <Error404/>\r\n    </div>)\r\n}\r\n\r\nexport default ErrorContainer\r\n\r\n","\r\nimport {setError, setStatus} from \"../../Redux/PacksPageReducer/PacksPageReducer\";\r\n\r\nimport {Dispatch} from \"react\";\r\nimport {setLoginAC} from \"../../Redux/AuthReducer/AuthReducer\";\r\n\r\nconst HelperErrorCatch = (e:any, dispatch: Dispatch<any>) => {\r\n\r\n    const error =  e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n    console.log(error)\r\n    console.log('errors:', {...e})\r\n    dispatch(setError(error))\r\n    dispatch(setStatus('failed'))\r\n    dispatch(setLoginAC(false))\r\n\r\n};\r\n\r\nexport default HelperErrorCatch;","import {ApiCards, ResponseTypeCardsData} from \"../../API/Api\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"../Store\";\r\nimport {RequestStatusType} from \"../AuthReducer/AuthReducer\";\r\nimport HelperErrorCatch from \"../../Utils/Helpers/HelperErrorCatch\";\r\n\r\n\r\nexport interface stateProps {\r\n    cards: Array<ResponseTypeCardsData> | null\r\n    status: RequestStatusType,\r\n    error: string | null,\r\n    pageSize: number\r\n    pageCurrent: number\r\n    totalCount: number\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n    cards: null,\r\n    status: \"succeeded\",\r\n    error: null,\r\n    pageSize: 3,\r\n    pageCurrent: 1,\r\n    totalCount: 25\r\n\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n    GET_CARDS = \"CardsContainer/GET_CARDS\",\r\n    SET_STATUS = \"CardsContainer/SET_STATUS\",\r\n    SET_CARDS_TOTAL_COUNT = \"CardsContainer/SET_PACKS_TOTAL_COUNT\",\r\n    SET_ERROR = \"CardsContainer/SET_ERROR\",\r\n    SET_PAGE_SIZE = \"CardsContainer/SET_PAGE_SIZE\",\r\n    SET_CURRENT_PAGE = \"CardsContainer/SET_CURRENT_PAGE\",\r\n    SET_UPDATE_GRADE = \"CardsContainer/SET_UPDATE_GRADE\",\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\nexport const setCards = (cards: Array<ResponseTypeCardsData> | null): Action<Array<ResponseTypeCardsData> | null> => ({\r\n    type: ActionType.GET_CARDS,\r\n    payload: cards\r\n})\r\nexport const setPageSizeAC = (pageSize: number): Action<number> => ({\r\n    type: ActionType.SET_PAGE_SIZE,\r\n    payload: pageSize\r\n})\r\nexport const setCurrentPageAC = (pageCurrent: number): Action<number> => ({\r\n    type: ActionType.SET_CURRENT_PAGE,\r\n    payload: pageCurrent\r\n})\r\n\r\n\r\nexport const setStatus = (status: RequestStatusType): Action<RequestStatusType> => ({\r\n    type: ActionType.SET_STATUS,\r\n    payload: status\r\n})\r\n\r\n\r\nexport const getError = (error: string): Action<string> => ({\r\n    type: ActionType.SET_ERROR,\r\n    payload: error\r\n})\r\nexport const setTotalCountCard = (cardTotalCount: number): Action<number> => ({\r\n    type: ActionType.SET_CARDS_TOTAL_COUNT,\r\n    payload: cardTotalCount\r\n})\r\nexport const setUpdateGrade = (_id: string, grade: number, shots: number): Action<{ _id: string, grade: number, shots: number }> => ({\r\n    type: ActionType.SET_UPDATE_GRADE,\r\n    payload: {_id, grade, shots}\r\n})\r\n\r\n//thunk\r\nexport const getCardsThunk = (cardsPack_id: string, pageSize?: number, currentPage?: number) => (dispatch: ThunkDispatch<AppRootStateType, {}, ActionsType>) => {\r\n    dispatch(setStatus('loading'))\r\n    ApiCards.getCards(cardsPack_id, pageSize, currentPage)\r\n        .then((res) => {\r\n            console.log('cards:', res)\r\n            dispatch(setTotalCountCard(res.data.cardsTotalCount))\r\n            dispatch(setCards(res.data.cards))\r\n        })\r\n        .catch((e) => {\r\n            HelperErrorCatch(e, dispatch)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatus('succeeded'))\r\n        })\r\n};\r\n\r\nexport const addCardsThunk = (cardsPack_id: string, question: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, ActionsType>, getState: () => AppRootStateType) => {\r\n        const pageSize = getState().cardsPage.pageSize\r\n        const currentPage = getState().cardsPage.pageCurrent\r\n        dispatch(setStatus('loading'))\r\n        ApiCards.addCards(cardsPack_id, question)\r\n            .then(() => {\r\n                dispatch(getCardsThunk(cardsPack_id, pageSize, currentPage))\r\n            })\r\n            .catch((e) => {\r\n                HelperErrorCatch(e, dispatch)\r\n            })\r\n\r\n    }\r\n\r\n\r\nexport const deleteCardsThunk = (cardsPack_id: string, _id: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, ActionsType>, getState: () => AppRootStateType) => {\r\n        const pageSize = getState().cardsPage.pageSize\r\n        const currentPage = getState().cardsPage.pageCurrent\r\n        dispatch(setStatus('loading'))\r\n        ApiCards.deleteCards(_id)\r\n            .then(() => {\r\n                dispatch(getCardsThunk(cardsPack_id, pageSize, currentPage))\r\n            })\r\n            .catch(e => {\r\n                HelperErrorCatch(e, dispatch)\r\n            })\r\n    }\r\n\r\nexport const onChangedCardsThunk = (cardsPack_id: string, _id: string, question: string) =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, {}, ActionsType>, getState: () => AppRootStateType) => {\r\n        const pageSize = getState().cardsPage.pageSize\r\n        const currentPage = getState().cardsPage.pageCurrent\r\n        dispatch(setStatus('loading'))\r\n        ApiCards.putCards(_id, question)\r\n            .then(() => {\r\n                dispatch(getCardsThunk(cardsPack_id, pageSize, currentPage))\r\n            })\r\n            .catch(e => {\r\n                HelperErrorCatch(e, dispatch)\r\n            })\r\n}\r\n\r\nexport const onChangeGrade = (card_id:string, grade:number) => (dispatch:ThunkDispatch<AppRootStateType, {}, ActionsType>) => {\r\n    dispatch(setStatus('loading'))\r\n    ApiCards.setGrade(card_id, grade)\r\n        .then(res => {\r\n            console.log(res)\r\n            dispatch(setStatus('succeeded'))\r\n            dispatch(setUpdateGrade(res.data.updatedGrade.card_id, res.data.updatedGrade.grade, res.data.updatedGrade.shots))\r\n        })\r\n        .catch(e => {\r\n            HelperErrorCatch(e, dispatch)\r\n        })\r\n}\r\n\r\n\r\nconst CardsReducer = (state: stateProps = initialState,\r\n                      action: Action<ResponseTypeCardsData[] & string\r\n                          & RequestStatusType & number>): stateProps => {\r\n    switch (action.type) {\r\n        //get cards from API\r\n        case ActionType.GET_CARDS:\r\n            return {\r\n                ...state, cards: action.payload\r\n            }\r\n        case ActionType.SET_CARDS_TOTAL_COUNT:\r\n            return {\r\n                ...state, totalCount: action.payload\r\n            }\r\n        //status\r\n        case ActionType.SET_STATUS:\r\n            return {\r\n                ...state, status: action.payload\r\n            };\r\n        //error\r\n        case ActionType.SET_ERROR:\r\n            return {...state, error: action.payload}\r\n        case ActionType.SET_CURRENT_PAGE:\r\n            return {...state, pageCurrent: action.payload}\r\n        case ActionType.SET_PAGE_SIZE:\r\n            return {...state, pageSize: action.payload}\r\n        //updateGrade\r\n        case ActionType.SET_UPDATE_GRADE:\r\n            if (state.cards) {\r\n               const {_id} = action.payload\r\n                let newArrr = state.cards?.map(item => {\r\n                    if (_id === item._id) {\r\n                        return {...item, ...action.payload as {}}\r\n                    } else {\r\n                        return  item\r\n                    }\r\n                })\r\n                return {...state, cards: newArrr\r\n                }\r\n            } else {\r\n                return state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\ntype  ActionsType = ReturnType<typeof setCards> | ReturnType<typeof setStatus> |\r\n    ReturnType<typeof getError> | ReturnType<typeof setTotalCountCard> |\r\n    ReturnType<typeof setUpdateGrade>\r\n\r\n\r\nexport default CardsReducer","import React, {FC, useState} from 'react';\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport Modal from \"../../../Components/Modal/Modal\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\n\r\ninterface Props {\r\n    errorMes?: string,\r\n    namePack: string,\r\n    cardsPack_id: string,\r\n    onChangeName: (id: string, name:string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nconst ChangeName: FC<Props> = ({cardsPack_id, namePack, errorMes,onChangeName,disabled\r\n                                   }) => {\r\n\r\n    const [name, setName] = useState<string>(namePack)\r\n    const [modal, setModal] = useState<boolean>(false)\r\n\r\n    const changeNameHandler = () => {\r\n        if (name) {\r\n            onChangeName(cardsPack_id, name)\r\n            setModal(false)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <SuperButton disabled={disabled} onClick={() => setModal(true)} className='btn_table'>Change name</SuperButton>\r\n            <Modal\r\n                modal={modal}\r\n                setModal={setModal}\r\n            >\r\n                <SuperInputText\r\n                    value={name}\r\n                    onChangeText={setName}\r\n                    placeholder={'New-Name'}\r\n\r\n                />\r\n                <SuperButton onClick={changeNameHandler}>Change Name</SuperButton>\r\n                {!!errorMes ? <span>errorMes</span> : null}\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ChangeName;","import React, { FC } from 'react';\r\nimport style from './TableItem.module.scss'\r\n\r\ninterface Props {\r\n    name1: string\r\n    name2?: number\r\n    name3?: Date\r\n}\r\n\r\nconst TableItem:FC<Props> = (props) => {\r\n    return (\r\n        <div className={style.card_wrapped}>\r\n            <div className={style.card_item}>{props.name1}</div>\r\n            <div className={style.card_item}>{props.name2}</div>\r\n            <div className={style.card_item}>{props.name3}</div>\r\n            <div className={`${style.card_item } ${style.card_item_btn}`}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default TableItem;","import React, {FC, useState} from 'react';\r\nimport SuperButton from '../../c2-SuperButton/SuperButton';\r\nimport Modal from '../Modal';\r\nimport style from './DeleteModal.module.scss'\r\n\r\n\r\ninterface Props {\r\n    onDeleteCard: (id: string) => void\r\n    id: string\r\n    disabled?:boolean\r\n}\r\n\r\nconst DeleteModal:FC<Props> = ({id,onDeleteCard, disabled}) => {\r\n\r\n    const [modal, setModal] = useState<boolean>(false)\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <SuperButton disabled={disabled} onClick={() => setModal(true)} className='btn_table'>del</SuperButton>\r\n            <Modal setModal={setModal} modal={modal}>\r\n                <div className={style.delete_modal_wrapper}>\r\n                    <h1 className={style.delete_modal_title}>Are you sure you want to delete it?</h1>\r\n                    <div className={style.btn_group_delete}>\r\n                        <SuperButton onClick={() => onDeleteCard(id)}>Yes</SuperButton>\r\n                        <SuperButton onClick={() => setModal(false)}>No</SuperButton>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default DeleteModal;","import React, {FC} from \"react\";\r\nimport {ResponseTypeCardsPacksData} from \"../../../API/Api\";\r\nimport style from './Packs.module.scss'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ChangeName from \"./ChangeNameInput\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport TableItem from \"../../../Components/TableWrapper/TableIttem/TableItem\";\r\nimport {onChangeNamePackThunk} from \"../../../Redux/PacksPageReducer/PacksPageReducer\";\r\nimport DeleteModal from \"../../../Components/Modal/DeleteModal/DeleteModal\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\n\r\n\r\ninterface Props {\r\n    cardPacks: ResponseTypeCardsPacksData\r\n    onDeletePack: (id: string) => void\r\n}\r\n\r\nconst PacksComponent: FC<Props> = ({\r\n                                       onDeletePack, cardPacks\r\n                                   }) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const userId = useSelector((state: AppRootStateType) => state.profile.profile?._id)\r\n    const onChangeNamePack = (id: string, name: string) => {\r\n        dispatch(onChangeNamePackThunk(id, name))\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        < >\r\n            <TableItem name1={cardPacks.name} name2={cardPacks.cardsCount} name3={cardPacks.updated}>\r\n                <DeleteModal onDeleteCard={onDeletePack} id={cardPacks._id} disabled={userId !== cardPacks.user_id}/>\r\n                <ChangeName namePack={cardPacks.name} cardsPack_id={cardPacks._id}\r\n                            onChangeName={onChangeNamePack} disabled={userId !== cardPacks.user_id}/>\r\n                <NavLink className={style.arrow_1} to={`/cards/${cardPacks._id}`}\r\n                > Cards <div/></NavLink>\r\n                {cardPacks.cardsCount > 0\r\n                    ? <NavLink className={style.arrow_1} to={`/learn/${cardPacks._id}`}\r\n                    > Learn <div/></NavLink>\r\n                    : null}\r\n            </TableItem>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default PacksComponent","import React, {FC, useState} from 'react';\r\nimport Modal from \"../../../../Components/Modal/Modal\";\r\nimport SuperInputText from \"../../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../../Components/c2-SuperButton/SuperButton\";\r\n\r\n\r\ninterface Props{\r\n    addNewName: (name:string) => void\r\n    disabled:boolean\r\n}\r\n\r\nconst AddNewPack:FC<Props> = ({addNewName, disabled}) => {\r\n    const [names, setNames] = useState<string>()\r\n\r\n    const [modal, setModal] = useState<boolean>(false)\r\n    const changeNameHandler = () => {\r\n        if (names) {\r\n            addNewName(names)\r\n            setModal(false)\r\n            setNames('')\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <SuperButton\r\n                disabled={disabled}\r\n                onClick={() => setModal(true)}>Add</SuperButton>\r\n            <Modal\r\n                modal={modal}\r\n                setModal={setModal}\r\n            >\r\n                <SuperInputText\r\n                    onChangeText={setNames}\r\n                    placeholder={'Name pack'}\r\n                />\r\n                <SuperButton onClick={changeNameHandler}>Add</SuperButton>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddNewPack;","import React, {FC, useState} from \"react\";\r\nimport AddNewPack from \"../../PagesApp/WrappedPages/PacksPage/AddNewPack/AddNewPack\";\r\n\r\nimport style from './TableWrapper.module.scss'\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport {setSortArrow, SortArrowValues} from \"../../Redux/PacksPageReducer/PacksPageReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/Store\";\r\ninterface Props {\r\n    onClickHandler?: (name:string) => void,\r\n    title1: string\r\n    title2:string\r\n    title3:string\r\n    disabled?: boolean\r\n    onClickUpHandlerSort?: () => void\r\n    onClickDownHandlerSort?: () => void\r\n}\r\n\r\n\r\n\r\nconst TableWrapper: FC<Props> = ({children, onClickHandler, title1, title2, title3, disabled, onClickUpHandlerSort, onClickDownHandlerSort}) => {\r\n    const [activeClassUp, setActiveClassUp] = useState<boolean>(false)\r\n    const [activeClassDown, setActiveClassDown] = useState<boolean>(false)\r\n    const status = useSelector((state: AppRootStateType) => state.packsPage.status)\r\n    const dispatch = useDispatch()\r\n    const addNewName = (name:string) => {\r\n        onClickHandler && onClickHandler(name)\r\n    }\r\n    const onClickUpHandler = () => {\r\n        if (status !== 'loading') {\r\n            setActiveClassUp(true)\r\n            setActiveClassDown(false)\r\n            dispatch(setSortArrow(SortArrowValues.SORT_UP))\r\n            onClickUpHandlerSort && onClickUpHandlerSort()\r\n        }\r\n    }\r\n    const onClickDownHandler = () => {\r\n        if (status !== \"loading\") {\r\n            setActiveClassUp(false)\r\n            setActiveClassDown(true)\r\n            dispatch(setSortArrow(SortArrowValues.SORT_DOWN))\r\n            onClickDownHandlerSort && onClickDownHandlerSort()\r\n        }\r\n    }\r\n    return (\r\n        <div className={style.main_wrapped}>\r\n            <div className={style.table_wrapped}>\r\n                <div className={style.title_wrapped}>\r\n                    <div className={style.title_item}>{title1}</div>\r\n                    <div className={style.title_item}>\r\n                        <div>{title2}</div>\r\n                        <div>\r\n                            <ArrowUpwardIcon\r\n                                className={`${style.Arrow} ${activeClassUp ? style.Arrow_active : ''} ${status === \"loading\"? style.Arrow_load : ''}`}\r\n                                onClick={onClickUpHandler}\r\n\r\n                            />\r\n                            <ArrowDownwardIcon\r\n                                className={`${style.Arrow} ${activeClassDown ? style.Arrow_active : ''} ${status === \"loading\"? style.Arrow_load : ''}`}\r\n                                onClick={onClickDownHandler}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.title_item}>{title3}</div>\r\n                    <div className={style.title_item}>\r\n                       <AddNewPack addNewName={addNewName} disabled={disabled ? disabled : false}/>\r\n                    </div>\r\n\r\n                </div>\r\n                {children}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TableWrapper","import React, {useState} from 'react'\r\nimport styles from './Paginator.module.css'\r\nimport cn from \"classnames\"\r\n\r\n//Paginators\r\ntype PropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChangeHandler?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalCount, pageSize,\r\n                                          currentPage = 1,\r\n                                          onPageChangeHandler = x => x,\r\n                                          portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChangeHandler(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: Array<string>\r\n    onChangeOption?: (option: string) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((el, i) => (\r\n        <option key={i}>\r\n            {el}\r\n        </option>\r\n    )) : [];\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../../Redux/Store\";\r\nimport {setCheckedCount} from \"../../../../../Redux/PacksPageReducer/PacksPageReducer\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300\r\n    },\r\n});\r\n\r\nexport const RangeSlider = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const dispatch = useDispatch()\r\n    const cardsCount = useSelector((state: AppRootStateType) => state.packsPage.cardsCount)\r\n    const value = useSelector((state: AppRootStateType) => state.packsPage.checkedCount)\r\n\r\n    const valuetext = (value: number) => {\r\n        return `${value}`;\r\n    }\r\n\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n        dispatch(setCheckedCount(newValue));\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Count packs\r\n            </Typography>\r\n            <Slider\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                min={cardsCount.minCardsCount}\r\n                max={cardsCount.maxCardsCount}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import { Dispatch } from \"redux\"\r\nimport { getPacksThunk } from \"../../Redux/PacksPageReducer/PacksPageReducer\"\r\n\r\nexport const HelpersGet = (isPrivat:boolean, dispatch: Dispatch<any>,pageSize:number, currentPage: number, userId:string | undefined ) => {\r\n    if (isPrivat){\r\n        dispatch(getPacksThunk(pageSize, currentPage, userId))\r\n    } else {\r\n        dispatch(getPacksThunk(pageSize, currentPage))\r\n    }\r\n}","import React, {FC, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addPacksThunk,\r\n    deletePackThunk,\r\n    setCurrentPageAC,\r\n    seTisPrivat,\r\n    setPackName,\r\n    setPageSizeAC\r\n} from \"../../../Redux/PacksPageReducer/PacksPageReducer\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport PacksComponent from \"./PacksComponent\";\r\nimport TableWrapper from \"../../../Components/TableWrapper/TableWrapper\";\r\nimport Paginator from \"../../../Common/Paginator/PaginatorComponent\";\r\nimport SuperSelect from \"../../../Components/c5-SuperSelect/SuperSelect\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport SuperCheckbox from \"../../../Components/c3-SuperCheckbox/SuperCheckbox\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './PacksContainer.module.scss'\r\nimport SuperInputText from \"../../../Components/c1-SuperInputText/SuperInputText\";\r\nimport {RangeSlider} from \"./AddNewPack/Slider/Slider\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport {HelpersGet} from \"../../../Utils/Helpers/HelpersGet\";\r\n\r\n\r\ninterface Props {\r\n}\r\n\r\nconst PacksContainer: FC<Props> = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const totalCoutnOptions = ['4', '7', '10', '20', '50']\r\n    const pageSize = useSelector((state: AppRootStateType) => state.packsPage.pageSize)\r\n    const currentPage= useSelector((state: AppRootStateType) => state.packsPage.currentPage)\r\n    const cardPacks = useSelector((state: AppRootStateType) => state.packsPage.cardPacks)\r\n    const status = useSelector((state: AppRootStateType) => state.packsPage.status)\r\n    const isPrivat = useSelector((state: AppRootStateType) => state.packsPage.isPrivat)\r\n    const userId = useSelector((state: AppRootStateType) => state.profile.profile?._id)\r\n    const isLogin = useSelector((state: AppRootStateType) => state.auth.isLogin)\r\n    const profile = useSelector((state: AppRootStateType) => state.profile.profile)\r\n    const totalCount = useSelector((state: AppRootStateType) => state.packsPage.cardPacksTotalCount)\r\n\r\n    useEffect(() => {\r\n        if (!isLogin) {\r\n            return\r\n        }\r\n        HelpersGet(isPrivat, dispatch,pageSize, currentPage, userId )\r\n    }, [pageSize, currentPage, isPrivat, userId, isLogin, dispatch])\r\n    const onDeletePack = (id: string) => {\r\n        dispatch(deletePackThunk(id))\r\n    }\r\n    const onChangeOption = (option: string) => {\r\n        dispatch(setPageSizeAC(+option))\r\n    }\r\n    const onPageChangeHandler = (pageNumber: number) => {\r\n        dispatch(setCurrentPageAC(pageNumber))\r\n    }\r\n    const onAddPack = (name:string) => {\r\n        dispatch(addPacksThunk(name))\r\n    }\r\n    const setIsPrivatHandler = () => {\r\n        dispatch(seTisPrivat(!isPrivat))\r\n    }\r\n    const sortingPacksHandler = () => {\r\n        HelpersGet(isPrivat, dispatch,pageSize, currentPage, userId )\r\n    }\r\n    const setPackNameHandler = (name: string) => {\r\n        dispatch(setPackName(name))\r\n    }\r\n    const sortUpArrow = () => {\r\n        HelpersGet(isPrivat, dispatch,pageSize, currentPage, userId )\r\n    }\r\n    const sortDownArrow = () => {\r\n        HelpersGet(isPrivat, dispatch,pageSize, currentPage, userId )\r\n    }\r\n\r\n    if (!isLogin || !profile) {\r\n        return <Redirect to={'/auth'}/>\r\n    }\r\n    return (\r\n        <div className={style.main_wrapp}>\r\n            <div className={style.setting_wrapp}>\r\n                <div><SuperCheckbox onChangeChecked={setIsPrivatHandler}>My packs</SuperCheckbox></div>\r\n                <div className={style.input_style}>\r\n                    Search:\r\n                    <SuperInputText onChangeText={setPackNameHandler} placeholder={'Pack name'}/>\r\n                </div>\r\n                <div className={style.input_style}>\r\n                    <RangeSlider/>\r\n\r\n                </div>\r\n\r\n                <div><SuperButton onClick={sortingPacksHandler} disabled={status === 'loading'}>Search</SuperButton></div>\r\n            </div>\r\n            <div className={style.isPrivat}>\r\n            </div>\r\n            <TableWrapper onClickHandler={onAddPack}\r\n                          title1={'Name'}\r\n                          title2={'Cards count'}\r\n                          title3={'Updated'}\r\n                          disabled={status === 'loading'}\r\n                          onClickUpHandlerSort={sortUpArrow}\r\n                          onClickDownHandlerSort={sortDownArrow}\r\n            >\r\n                {\r\n                    status === 'loading'\r\n                        ? <Spinner/>\r\n                        : cardPacks\r\n                        ? cardPacks.map((item, inx) => {\r\n                            return (\r\n                                <PacksComponent cardPacks={item} key={inx} onDeletePack={onDeletePack}/>\r\n                            )\r\n                        })\r\n                        : null\r\n\r\n                }\r\n                <Paginator totalCount={totalCount ? totalCount : 1} pageSize={pageSize} currentPage={currentPage}\r\n                           onPageChangeHandler={onPageChangeHandler}/>\r\n                <div>Page size: <SuperSelect options={totalCoutnOptions} onChangeOption={onChangeOption}/></div>\r\n            </TableWrapper>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PacksContainer","import React, {FC, Fragment} from \"react\";\r\nimport {ResponseTypeCardsData} from \"../../../API/Api\";\r\nimport TableItem from \"../../../Components/TableWrapper/TableIttem/TableItem\";\r\n\r\nimport ChangeName from \"../PacksPage/ChangeNameInput\";\r\nimport DeleteModal from \"../../../Components/Modal/DeleteModal/DeleteModal\";\r\n\r\ninterface Props {\r\n    cards: ResponseTypeCardsData,\r\n    onDeleteCard: (id: string) => void\r\n    onChangeNameQuestion: (cardId: string,question:string) => void\r\n    disabled?: boolean\r\n}\r\n\r\nconst CardsComponent: FC <Props> = ({ cards, onDeleteCard, onChangeNameQuestion, disabled\r\n\r\n}) => {\r\n\r\n\r\n    return (<Fragment>\r\n        <TableItem name1={cards.question} name2={cards.rating} name3={cards.updated}>\r\n\r\n            <DeleteModal id={cards._id} onDeleteCard={onDeleteCard} disabled={disabled}/>\r\n            <ChangeName namePack={cards.question}\r\n                        cardsPack_id={cards._id}\r\n                        onChangeName = {onChangeNameQuestion}\r\n                        disabled={disabled}\r\n            />\r\n        </TableItem>\r\n\r\n    </Fragment>)\r\n}\r\n\r\n\r\nexport default CardsComponent","import {FC} from \"react\";\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport AuthContainer from \"../PagesApp/WrappedPages/AuthPage/AuthContainer\";\r\nimport RegistrationContainer from \"../PagesApp/WrappedPages/RegistartionPage/RegistrationContainer\";\r\nimport ProfileContainer from \"../PagesApp/WrappedPages/ProfilePage/ProfileContainer\";\r\nimport ResPasswordContainer from \"../PagesApp/WrappedPages/ResPasswordPage/ResPasswordContainer\";\r\nimport NewPasswordContainer from \"../PagesApp/WrappedPages/NewPasswordPage/NewPasswordContainer\";\r\nimport ErrorContainer from \"../PagesApp/WrappedPages/ErrorPage/ErrorContainer\";\r\nimport PacksContainer from \"../PagesApp/WrappedPages/PacksPage/PacksContainer\";\r\nimport CardsPageContainer from \"../PagesApp/WrappedPages/CardsPage/CardsPageConteiner\"\r\nimport LearnPage from \"../PagesApp/WrappedPages/LearnPage/LearnPage\";\r\n\r\n\r\n\r\nexport enum RoutingType {\r\n    auth=\"/auth\",\r\n    registration = \"/registration\",\r\n    profile = \"/profile\",\r\n    error=\"/404\",\r\n    resPass = \"/resPassword\",\r\n    newPass =\"/set-new-password\",\r\n    packs = \"/packs\",\r\n    cards = \"/cards\",\r\n    learn = '/learn'\r\n}\r\n\r\n\r\n\r\n\r\nconst Routes : FC = () => {\r\n    return (<>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={RoutingType.profile}/>}/>\r\n                <Route exact path={RoutingType.auth} render={()=> <AuthContainer/>}/>\r\n                <Route exact path = {RoutingType.registration} render ={()=> <RegistrationContainer/>}/>\r\n                <Route exact path = {RoutingType.profile} render = {()=><ProfileContainer/>}/>\r\n                <Route exact path = {RoutingType.resPass} render = {()=> <ResPasswordContainer/>}/>\r\n                <Route path = {RoutingType.newPass} render = {()=> <NewPasswordContainer/>}/>\r\n                <Route  exact path = {RoutingType.packs} render = {()=> <PacksContainer/>}/>\r\n                <Route exact path  = {`${RoutingType.cards}/:cardId`} render = {()=> <CardsPageContainer/>}/>\r\n                <Route exact path  = {`${RoutingType.learn}/:cardId`} render = {()=> <LearnPage\r\n                />}/>\r\n                <Route path={RoutingType.error} render={()=> <ErrorContainer/>}/>\r\n                <Redirect from={'*'} to={RoutingType.error}/>\r\n            </Switch>\r\n    </>)\r\n}\r\n\r\n\r\nexport default Routes;","import React, {FC, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {ResponseTypeCardsData} from \"../../../API/Api\";\r\nimport CardsComponent from \"./CardsComponent\";\r\nimport TableWrapper from \"../../../Components/TableWrapper/TableWrapper\";\r\nimport {RequestStatusType} from \"../../../Redux/AuthReducer/AuthReducer\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\nimport {\r\n    addCardsThunk,\r\n    deleteCardsThunk,\r\n    getCardsThunk,\r\n    onChangedCardsThunk,\r\n    setCurrentPageAC,\r\n    setPageSizeAC\r\n} from \"../../../Redux/CardsReducer/CardsReducer\";\r\nimport Paginator from \"../../../Common/Paginator/PaginatorComponent\";\r\nimport SuperSelect from \"../../../Components/c5-SuperSelect/SuperSelect\";\r\n\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\n\r\nconst CardsPageContainer: FC<Props> = ({...props}) => {\r\n    const totalCoutnOptions = ['3', '5', '10', '20']\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.cardsPage.status)\r\n    const cards = useSelector<AppRootStateType, ResponseTypeCardsData[] | null>(state => state.cardsPage.cards)\r\n    const error = useSelector<AppRootStateType, string | null> (state => state.cardsPage.error)\r\n    const pageSize = useSelector((state: AppRootStateType) => state.cardsPage.pageSize)\r\n    const currentPage= useSelector((state: AppRootStateType) => state.cardsPage.pageCurrent)\r\n    const userId = useSelector((state: AppRootStateType) => state.profile.profile?._id)\r\n    // cardsId - params from route for get Id from params\r\n    const {cardId} = useParams<{ cardId: string }>()\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getCardsThunk(cardId, pageSize, currentPage))\r\n    }, [pageSize, currentPage])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const onAddCard = (question: string) => {\r\n        dispatch(addCardsThunk(cardId, question))\r\n    }\r\n    const onDeleteCard = (id: string) => {\r\n        dispatch(deleteCardsThunk(cardId,id))\r\n    }\r\n\r\n    const onChangeNameQuestion = (id: string, question: string) => {\r\n        dispatch(onChangedCardsThunk(cardId, id, question ))\r\n    }\r\n    const onChangeOption = (option: string) => {\r\n        dispatch(setPageSizeAC(+option))\r\n    }\r\n    const onPageChangeHandler = (pageNumber: number) => {\r\n        dispatch(setCurrentPageAC(pageNumber))\r\n    }\r\n\r\n    return (<div>\r\n                <div>{error}</div>\r\n        <TableWrapper onClickHandler={onAddCard} title1={'Name'} title2={'Rating'} title3={'Updated'} disabled={ !!cards?.find(item => item.user_id !== userId) || status === \"loading\"}>\r\n            { status === \"loading\"? <Spinner /> : cards ?\r\n                cards?.map((item, inx) => {\r\n                    return (<CardsComponent key={cardId + inx} cards={item}\r\n                                            onDeleteCard = {onDeleteCard}\r\n                                            onChangeNameQuestion = {onChangeNameQuestion}\r\n                                            disabled={userId !== item.user_id}\r\n                    />)\r\n\r\n                }) : null\r\n            }\r\n            <Paginator totalCount={cards ? cards.length : 1} pageSize={pageSize} currentPage={currentPage} onPageChangeHandler={onPageChangeHandler}/>\r\n            <div>Page size: <SuperSelect options={totalCoutnOptions} onChangeOption={onChangeOption}/></div>\r\n        </TableWrapper>\r\n\r\n    </div>)\r\n}\r\nexport default CardsPageContainer","import React, {useEffect, useState} from 'react';\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCardsThunk, onChangeGrade} from \"../../../Redux/CardsReducer/CardsReducer\";\r\nimport {AppRootStateType} from \"../../../Redux/Store\";\r\nimport {ResponseTypeCardsData} from \"../../../API/Api\";\r\nimport SuperButton from \"../../../Components/c2-SuperButton/SuperButton\";\r\nimport Spinner from \"../../../Common/preloader/Spinner\";\r\n\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: ResponseTypeCardsData[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    // console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nconst LearnPage = () => {\r\n    const cards = useSelector<AppRootStateType, ResponseTypeCardsData[] | null>(state => state.cardsPage.cards)\r\n    const cardsTotalCount = useSelector<AppRootStateType, number>(state => state.cardsPage.totalCount)\r\n    const {cardId} = useParams<{ cardId: string }>()\r\n    const dispatch = useDispatch()\r\n    const isLogin = useSelector((state: AppRootStateType) => state.auth.isLogin)\r\n\r\n    const [card, setCard] = useState<ResponseTypeCardsData>();\r\n    const status = useSelector((state: AppRootStateType) => state.cardsPage.status)\r\n\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    useEffect(() => {\r\n\r\n        if (first) {\r\n            dispatch(getCardsThunk(cardId, cardsTotalCount))\r\n            setFirst(false);\r\n        }\r\n\r\n\r\n        if (cards && cards.length > 0) setCard(getCard(cards));\r\n\r\n        return () => {\r\n            // console.log('LearnContainer useEffect off');\r\n\r\n        }\r\n    }, [dispatch, cardId, cards, first, cardsTotalCount]);\r\n\r\n    const setGradeCards = (grade: number) => {\r\n        if (card) {\r\n            dispatch(onChangeGrade(card._id, grade))\r\n        }\r\n    }\r\n\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n\r\n        if (cards && cards.length > 0) {\r\n            // dispatch\r\n            setCard(getCard(cards));\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    if (!isLogin) {\r\n        return <Redirect to={'/auth'}/>\r\n    }\r\n    if (!card) {\r\n\r\n        return <Spinner/>\r\n    }\r\n    return (\r\n        <div>\r\n            LearnPage\r\n            <div>Grade: {card && card.grade.toFixed(2)}</div>\r\n            <div>Shots: {card && card.shots}</div>\r\n            <div>{card && card.question}</div>\r\n            <div>\r\n                <SuperButton onClick={() => setIsChecked(true)}>check</SuperButton>\r\n            </div>\r\n\r\n            {isChecked && (\r\n                <>\r\n                    <div>{card && card.answer}</div>\r\n\r\n                    {grades.map((g, i) => (\r\n                        <SuperButton key={'grade-' + i}\r\n                                     disabled={status === 'loading'}\r\n                                     onClick={() => setGradeCards(i + 1)}>{g}</SuperButton>\r\n                    ))}\r\n\r\n                    <div><SuperButton\r\n\r\n                        disabled={status === 'loading'}\r\n                        onClick={onNext}>next</SuperButton></div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default LearnPage;\r\n\r\n","export interface stateProps {\r\n\r\n\r\n}\r\n\r\n\r\nconst initialState: stateProps = {\r\n\r\n\r\n\r\n}\r\n\r\n\r\n//Type\r\nexport enum ActionType {\r\n}\r\n\r\n\r\n//actions\r\n\r\ninterface Action<T> {\r\n    type: ActionType,\r\n    payload: T\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ErrorReducer = (state: stateProps = initialState, action: Action<any>): stateProps => {\r\n    switch (action.type) {\r\n\r\n    }\r\n    return state\r\n}\r\n\r\nexport default ErrorReducer","import {FC} from \"react\";\r\n\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RoutingType} from \"../../../Routes/Routes\";\r\nimport style from './NavigationContainer.module.scss'\r\n\r\nconst NavigationContainer: FC = () => {\r\n\r\n    return (\r\n    <nav>\r\n        <div className={style.wrapper}>\r\n            <NavLink\r\n                to={RoutingType.auth}\r\n                activeClassName={style.active}\r\n            >Auth</NavLink>\r\n            <NavLink\r\n                to={RoutingType.registration}\r\n                activeClassName={style.active}\r\n            >Registration</NavLink>\r\n            <NavLink\r\n                to={RoutingType.profile}\r\n                activeClassName={style.active}\r\n            >Profile</NavLink>\r\n            <NavLink\r\n                to={RoutingType.resPass}\r\n                activeClassName={style.active}\r\n            >Password Recovery</NavLink>\r\n            <NavLink\r\n                to={RoutingType.error}\r\n                activeClassName={style.active}\r\n            >ERROR</NavLink>\r\n            <NavLink to={RoutingType.packs} activeClassName={style.active}>\r\n                Page of Packs\r\n            </NavLink>\r\n        </div>\r\n\r\n\r\n\r\n    </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default NavigationContainer","import React, {FC, useEffect} from 'react';\r\nimport './App.css';\r\nimport NavigationContainer from \"./PagesApp/StaticPages/Navigation/NavigationContainer\";\r\nimport Routes from \"./Routes/Routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./Redux/Store\";\r\nimport Spinner from \"./Common/preloader/Spinner\";\r\nimport {setAuthMe} from './Redux/AuthReducer/AuthReducer';\r\n\r\n\r\nconst App: FC = () => {\r\n\r\n    const isInitial = useSelector((state: AppRootStateType) => state.app.isInitial)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setAuthMe())\r\n    }, [])\r\n\r\n    if(!isInitial) {\r\n        return <Spinner/>\r\n    }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <NavigationContainer/>\r\n        <div className={'container'}>\r\n            <Routes/>\r\n        </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport { combineReducers, createStore, applyMiddleware} from \"redux\";\r\nimport AuthReducer, { AuthType } from \"./AuthReducer/AuthReducer\";\r\nimport NewPassReducer, {NewMesActionType} from \"./NewPassReducer/NewPassReducer\";\r\nimport ErrorReducer from \"./ErrorReducer/ErrorReducer\";\r\nimport ProfileReducer, { ActionProfileType } from \"./ProfileReducer/ProfileReducer\";\r\nimport  RegistrationReducer from \"./RegistrationReducer/RegistartionReducer\";\r\nimport ResPasswordReducer, {ResPasswordType} from \"./ResPassReducer/ResPasswordReducer\";\r\n\r\n\r\nimport {AppReducer, AppType } from './AppReducer/AppReducer';\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport PacksPageReducer from \"./PacksPageReducer/PacksPageReducer\";\r\nimport CardsReducer from \"./CardsReducer/CardsReducer\";\r\n\r\n\r\nconst reducer = combineReducers({\r\n    auth: AuthReducer,\r\n    newPas: NewPassReducer,\r\n    error: ErrorReducer,\r\n    profile: ProfileReducer,\r\n    registration:  RegistrationReducer,\r\n    resPas: ResPasswordReducer,\r\n    app: AppReducer,\r\n    packsPage: PacksPageReducer,\r\n    cardsPage: CardsReducer\r\n\r\n})\r\n\r\n\r\nconst middleware = applyMiddleware(thunkMiddleware)\r\n\r\n\r\n\r\nexport const store = createStore(reducer, composeWithDevTools(middleware));\r\n\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducer>\r\nexport type AppActionType = AuthType | ActionProfileType | AppType | NewMesActionType | ResPasswordType\r\n\r\n\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    AppRootStateType,\r\n    unknown,\r\n    AppActionType\r\n    >\r\n\r\nexport default store\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./Redux/Store\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_wrapped\":\"TableWrapper_main_wrapped__2TVJP\",\"table_wrapped\":\"TableWrapper_table_wrapped__mwQxD\",\"title_wrapped\":\"TableWrapper_title_wrapped__1Bu8-\",\"title_item\":\"TableWrapper_title_item__1sVgV\",\"Arrow\":\"TableWrapper_Arrow__1wHRc\",\"Arrow_active\":\"TableWrapper_Arrow_active__3x3vn\",\"Arrow_load\":\"TableWrapper_Arrow_load__3dsDm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_main_wrapper\":\"ProfileContainer_profile_main_wrapper__2nnYF\",\"profile_item_wrapper\":\"ProfileContainer_profile_item_wrapper__SEks7\",\"profile_item\":\"ProfileContainer_profile_item__FH_w2\",\"item_title\":\"ProfileContainer_item_title__qVkEg\",\"change_name\":\"ProfileContainer_change_name__HdavO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth_wrapper\":\"AuthContainer_auth_wrapper__1Ss5H\",\"auth_main\":\"AuthContainer_auth_main__29MDv\",\"container\":\"AuthContainer_container__1WWno\",\"auth_link\":\"AuthContainer_auth_link__pHCct\",\"input_block\":\"AuthContainer_input_block__1qZw3\",\"btn_check\":\"AuthContainer_btn_check__2j4hL\",\"errorMesOp\":\"AuthContainer_errorMesOp__IgJdJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NavigationContainer_wrapper__2yerc\",\"active\":\"NavigationContainer_active__3vQEO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_wrapped\":\"TableItem_card_wrapped__1M_-7\",\"card_item\":\"TableItem_card_item__3YaZT\",\"card_item_btn\":\"TableItem_card_item_btn__3Xp8D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isPrivat\":\"PacksContainer_isPrivat__2FZ8i\",\"main_wrapp\":\"PacksContainer_main_wrapp__16T-g\",\"search_panel_main\":\"PacksContainer_search_panel_main__1-pBY\",\"input_style\":\"PacksContainer_input_style__3naNm\",\"setting_wrapp\":\"PacksContainer_setting_wrapp__2Egr2\",\"slider_wrapp\":\"PacksContainer_slider_wrapp__2DIXn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1oRfA\",\"errorInput\":\"SuperInputText_errorInput__3Hdvv\",\"error\":\"SuperInputText_error__J5ki3\",\"otherInput\":\"SuperInputText_otherInput__vwJMA\",\"search_panel\":\"SuperInputText_search_panel__1xdzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__32jpQ\",\"modal_content\":\"Modal_modal_content__1Tyd3\",\"active\":\"Modal_active__1UNMa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_default\":\"SuperButton_button_default__2Z5gD\",\"btn_table\":\"SuperButton_btn_table__1m67o\",\"button_red\":\"SuperButton_button_red__35bFC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reg_wrapper\":\"Registration_reg_wrapper__35qkB\",\"container\":\"Registration_container__20ic9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"res_Password_wrapper\":\"ResPassword_res_Password_wrapper__2qLGV\",\"error\":\"ResPassword_error__1GTzE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete_modal_wrapper\":\"DeleteModal_delete_modal_wrapper__2tOdm\",\"delete_modal_title\":\"DeleteModal_delete_modal_title__z_Wh5\",\"btn_group_delete\":\"DeleteModal_btn_group_delete__3GL96\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3QdXr\",\"pageNumber\":\"Paginator_pageNumber__3P0f8\",\"selectedPage\":\"Paginator_selectedPage__2Lf9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1Qf6i\",\"spanClassName\":\"SuperCheckbox_spanClassName__20Kxv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper_main\":\"NewPasswordContainer_wrapper_main__2NGQB\",\"wrapper_items\":\"NewPasswordContainer_wrapper_items__2dAH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow_1\":\"Packs_arrow_1__1GvI_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__2B1bA\",\"animates\":\"Spinner_animates__Bmxug\",\"animateBg\":\"Spinner_animateBg__2izO9\"};"],"sourceRoot":""}